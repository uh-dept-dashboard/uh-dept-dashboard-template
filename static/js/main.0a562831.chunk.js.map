{"version":3,"sources":["images/uh-logo.png","NavBar.tsx","Theme.tsx","components/spark/SparkCharts.tsx","DataTypes.tsx","pages/academic-year/AYMeasureCard.tsx","pages/academic-year/AYMeasureCardProps.tsx","pages/academic-year/AYMeasureCards.tsx","pages/academic-year/AYTabbedContainer.tsx","pages/academic-year/AYPage.tsx","components/initiative-charts/InitiativeChart.tsx","components/initiative-charts/InterventionChart.tsx","pages/initiatives/Diversity.tsx","pages/initiatives/ProfessionalPreparation.tsx","App.tsx","data/SampleData.tsx","index.tsx"],"names":["ExportModalButton","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","basic","Header","Content","Description","Actions","content","onClick","positive","ChartType","NavBar","title","Menu","style","marginBottom","attached","borderless","stackable","Item","Image","size","src","uhLogo","className","fontWeight","fontSize","as","NavLink","activeClassName","exact","to","key","Dropdown","text","theme","color","chartWidth","chartHeight","this","green","purple","lightGreen","red","yellow","TrendlineSparkTooltip","payload","active","console","log","year","value","trendLineSparkDot","dotProps","currYear","stroke","fill","UnitType","MeasureType","BreakdownType","TimelineType","TrendLineSpark","data","width","height","isAnimationActive","type","dataKey","strokeWidth","dot","BarSpark","LabeledBarSpark","PieSpark","label","entry","cx","cy","outerRadius","DemographicPieSpark","data1","slice","data2","length","AYMeasureCard","num","name","description","priorDelta","nextDelta","unit","sparks","formattedValue","toPrecision","Percent","Dollars","formattedPriorDelta","formattedNextDelta","Card","raised","Grid","Column","verticalAlign","textAlign","paddingLeft","paddingRight","Icon","Statistic","Label","Value","paddingTop","minHeight","map","index","chartTitle","chartType","chartData","computeDelta","dashboardDB","measureType","offset","measureData","currValue","trend","priorValue","Math","floor","makeCardProps","latestYear","unitType","trendData","fiveYearTrend","breakdownChart","breakdowns","AYMeasureCards","cardInfo","ayPageDB","cardPropsList","Object","values","measure","push","makeCardInfo","Group","centered","info","AYTabbedContainer","panes","menuItem","render","Tab","Pane","defaultActiveIndex","AYPage","Container","fluid","InitiativeChart","hideXAxis","domain","syncId","margin","top","right","left","bottom","strokeDasharray","align","hide","InterventionChartTooltip","intervention","InterventionChart","interval","DiversityPage","timelinePageDB","Row","women","nativehawaiians","ProfessionalPreparationPage","preparation","programming","App","Helmet","path","Diversity","ProfessionalPreparation","yearList","makeUndergraduateResearchExperienceBreakdowns","makeUndergraduateResearchExperienceMeasurements","makeInternshipBreakdowns","makeInternshipMeasurements","makeStakeholderSurveyResponseBreakdowns","makeStakeholderSurveyMeasurements","makeExitSurveyResponseBreakdowns","makeExitSurveyMeasurements","makeCourseEvaluationResponseBreakdowns","makeCourseEvaluationMeasurements","makeByPublicationQualityBreakdowns","makePublicationQualityMeasurements","makeByDegreeProgramBreakdowns","makeByDegreeProgramMeasurements","makeByFacultyBreakdowns","makeSortedMeasurements","makeByGenderEthnicityBreakdowns","makeDemographicMeasurements","makeByNumberSemesterBreakdowns","makeByNumberSemesterMeasurements","urop","random","faculty","unfunded","hawaii","mainland","other","men","caucasian","nativeHawaiian","makeMeasurementTrend","lower","upper","divisor","range","i","sort","a","b","endYear","SSH","Number","FACULTYFTE","EXTRAMURALFUNDING","RETENTION","PUBLICATIONS","GRADUATESTUDENTSUPPORTFTE","GRADUATES","TIMETODEGREE","ADMISSIONS","COURSEEVALUATIONRESPONSE","COURSEEVALUATIONRESPONSE2","EXITSURVEYRESPONSE","STAKEHOLDERSURVEYRESPONSE","INTERNSHIP","UNDERGRADRESEARCHEXPERIENCE","makeAYPageDB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a562831.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/uh-logo.1f7898fc.png\";","import React from 'react';\nimport {Menu, Image, Button, Modal, Dropdown} from 'semantic-ui-react';\nimport uhLogo from './images/uh-logo.png';\nimport {NavLink} from 'react-router-dom';\n\nfunction ExportModalButton() {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n           trigger={<Button basic>Export</Button>}>\n      <Modal.Header>Export Data</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>If this button actually worked, then clicking it would download all the data in this\n          dashboard for personal exploration.</Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button content=\"Dismiss\" onClick={() => setOpen(false)} positive/>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\ntype NavBarProps = {\n  title: string\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst NavBar: React.FunctionComponent<NavBarProps> = ({title = 'UH Dept Dashboard'}) => {\n  const menuStyle = {marginBottom: '20px'};\n  return (\n    <Menu style={menuStyle} attached=\"top\" borderless stackable>\n      <Menu.Item>\n        <Image size='mini' src={uhLogo}/>\n      </Menu.Item>\n      <Menu.Item>\n        <span className='uh-green' style={{fontWeight: 800, fontSize: '24px'}}>{title}</span>\n      </Menu.Item>\n      <Menu.Item as={NavLink} activeClassName=\"active\" exact to=\"/\" key='academic-year'>Academic Year View</Menu.Item>\n      <Menu.Item>\n        <Dropdown text=\"Initiatives View\">\n          <Dropdown.Menu>\n            <Dropdown.Item text=\"Diversity\" as={NavLink} exact to=\"/diversity\"/>\n            <Dropdown.Item text=\"Professional Preparation\" as={NavLink} exact to=\"/professional-preparation\"/>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Item>\n      <Menu.Item><ExportModalButton/></Menu.Item>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","/* Provide access to various thematic elements. */\n\nclass Theme {\n  color: Record<string, string>;\n  chartWidth: number;\n  chartHeight: number;\n  constructor() {\n    this.color = {};\n    this.color.green = '#376551';\n    this.color.purple = '#7C64E8';\n    this.color.lightGreen = '#4DE8A5';\n    this.color.red = '#E84F35';\n    this.color.yellow = '#E8D541';\n    this.chartWidth = 325;\n    this.chartHeight = 100;\n  }\n}\n\nconst theme = new Theme();\n\nenum ChartType {\n  TrendLineSpark = 'TrendLineSpark',\n  BarSpark = 'BarSpark',\n  PieSpark = 'PieSpark',\n  DemographicPieSpark = 'DemographicPieSpark',\n  LabeledBarSpark = 'LabeledBarSpark'\n}\n\nexport { theme, ChartType };\n","import React from 'react';\nimport {LineChart, Line, BarChart, Bar, PieChart, Pie, XAxis, Dot, DotProps, Tooltip} from 'recharts';\nimport {theme} from '../../Theme';\n\ninterface SparkProps {\n  data: { value: number, label?: string, year?: number }[]\n}\n\nfunction TrendlineSparkTooltip({ payload, active }:any) {\n  if (active) {\n    console.log('payload', payload);\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">Year: {`${payload[0].payload.year}`}</p>\n        <p className=\"intro\">Value: {`${payload[0].payload.value}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n}\n\nfunction trendLineSparkDot(dotProps: JSX.IntrinsicAttributes & JSX.IntrinsicClassAttributes<Dot> & Readonly<DotProps> & Readonly<{ children?: React.ReactNode; }>) {\n  // @ts-ignore\n  if (dotProps.payload.year === dotProps.payload.currYear) {\n    // @ts-ignore\n    dotProps.stroke = 'red';\n    // @ts-ignore\n    dotProps.fill = 'red';\n  }\n  return <Dot {...dotProps}/>\n}\n\nconst TrendLineSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <LineChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Line isAnimationActive={false} type='monotone' dataKey='value' stroke={theme.color.green} strokeWidth={2} dot={trendLineSparkDot} />\n      <Tooltip content={<TrendlineSparkTooltip />}/>\n    </LineChart>\n  )\n}\n\nconst BarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n      <Tooltip />\n    </BarChart>\n  )\n}\n\nconst LabeledBarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n      <XAxis dataKey='label'/>\n      <Tooltip/>\n    </BarChart>\n  )\n}\n\nconst PieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/2} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n      <Tooltip/>\n    </PieChart>\n  )\n}\n\nconst DemographicPieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  const data1 = data.slice(0,2);\n  const data2 = data.slice(2, data.length);\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data1} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/4} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n      <Pie data={data2} dataKey='value' fill={theme.color.green} isAnimationActive={false} cx={(theme.chartWidth * 4)/5} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} label={(entry) => entry.label}/>\n      <Tooltip/>\n    </PieChart>\n  )\n}\n\nexport type { SparkProps };\nexport { TrendLineSpark, BarSpark, PieSpark, DemographicPieSpark, LabeledBarSpark };\n","/**\n * The units associated with a Measure.\n */\nimport {ChartType} from \"./Theme\";\n\nenum UnitType {\n  Dollars = '$',\n  Percent = '%',\n  Number = 'Number'\n}\n\n/**\n * All of the possible Measures.\n */\nenum MeasureType {\n  SSH= 'SSH',\n  FACULTYFTE = 'FACULTYFTE',\n  EXTRAMURALFUNDING = 'EXTRAMURALFUNDING',\n  RETENTION = 'RETENTION',\n  PUBLICATIONS = 'PUBLICATIONS',\n  GRADUATESTUDENTSUPPORTFTE = 'GRADUATESTUDENTSUPPORTFTE',\n  GRADUATES = 'GRADUATES',\n  TIMETODEGREE = 'TIMETODEGREE',\n  ADMISSIONS = 'ADMISSIONS',\n  COURSEEVALUATIONRESPONSE = 'COURSEEVALUATIONRESPONSE',\n  COURSEEVALUATIONRESPONSE2 = 'COURSEEVALUATIONRESPONSE2',\n  EXITSURVEYRESPONSE = 'EXITSURVEYRESPONSE',\n  STAKEHOLDERSURVEYRESPONSE = 'STAKEHOLDERSURVEYRESPONSE',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADRESEARCHEXPERIENCE = 'UNDERGRADRESEARCHEXPERIENCE'\n}\n\n/**\n * All of the possible Breakdowns.\n */\nenum BreakdownType {\n  BYFACULTY = 'BYFACULTY',\n  DEMOGRAPHIC = 'DEMOGRAPHIC',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADUATERESEARCHEXPERIENCE  = 'UNDERGRADUATERESEARCHEXPERIENCE',\n  PUBLICATIONTIER = 'PUBLICATIONTIER',\n  TIMETODEGREE = 'TIMETODEGREE',\n  DEGREEPROGRAM = 'DEGREEPROGRAM',\n  NUMBERSEMESTERS = 'NUMBERSEMESTERS',\n  COURSEEVALUATION = 'COURSEEVALUATION',\n  EXITSURVEY = 'EXITSURVEY',\n  STAKEHOLDERSURVEY = 'STAKEHOLDERSURVEY'\n}\n\n/**\n * A single, primitive measurement. All Measures and Breakdowns are ultimately one or more Measurements.\n * Example: { value: 4 }\n */\ninterface Measurement {\n  value: number,\n  label?: string,\n  year?: number\n}\n\n/**\n * All Measures compute a single Measurement per year. The \"trend\" is the past 5 years of the Measure.\n * Example: { 2015: {value: 2}, 2016: {value: 3}, 2017: {value: 4}, 2018: {value: 5}, 2019: {value: 1}}\n */\ntype MeasureTrend = {\n  [key in string]? : Measurement\n}\n\n/**\n * Breakdowns also have a \"trend\", but a breakdown trend has a set of Measurements per year.\n * Label is typically required, or the order of occurrence in the array of Measurements is significant.\n * Example: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}\n */\ntype BreakdownTrend = {\n  [key in string]? : Measurement[]\n}\n\n/**\n * Provides the title, type, and data (over five years) for a Breakdown Chart.\n * Example: { chartType: 'BarSpark', chartTitle: 'By gender, ethnicity', chartData: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}}\n */\ninterface BreakdownChart {\n  chartType: ChartType,\n  chartTitle: string,\n  chartData: BreakdownTrend\n}\n\n/**\n * The global data structure containing all Measures and Breakdowns.\n *  db = {\n *    SSH: {\n *      name: 'SSH',\n *      unitType: 'Number',\n *      description: 'Measures the amount of instruction.'\n *      trend: { 2015: {value: 23}, 2016: {value: 24}, 2017: {value: 25}, 2018: {value: 26}, 2019: {value: 27}},\n *      breakdowns: [\n *        { chartTitle: 'By gender, ethnicity',\n *          chartType: 'DemographicPieSpark',\n *          chartData: { 2015: [{value: 2}, {value: 3}, {value: 4}, {value: 6}], 2016: [{value: 45} ... ] }\n *        }\n *      ]\n *    }\n *  }*\n */\ntype AYPageDB = {\n  [measureType in MeasureType]?: {\n    name: string,\n    unitType: UnitType,\n    description: string,\n    trend: MeasureTrend,\n    breakdowns: BreakdownChart[]\n  }\n}\n\nenum TimelineType {\n  DIVERSITYTIMELINE = 'DIVERSITYTIMELINE',\n  MARKETABILITYTIMELINE = 'MARKETABILITYTIMELINE'\n}\n\ntype TimelinePageDB = {\n  [timelineType in TimelineType]?: {\n    name: string,\n    data: string\n  }\n}\n\ntype DashboardDB = {\n  ayPageDB: AYPageDB,\n  timelinePageDB: TimelinePageDB\n}\n\nexport type { MeasureTrend, Measurement, AYPageDB, TimelinePageDB, DashboardDB, BreakdownTrend, BreakdownChart } ;\nexport { UnitType, MeasureType, BreakdownType };\n\n\n","import React from 'react';\nimport {Card, Statistic, Grid, Icon} from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport {ChartType } from '../../Theme';\nimport {TrendLineSpark, BarSpark, DemographicPieSpark, LabeledBarSpark, PieSpark} from '../../components/spark/SparkCharts';\nimport {UnitType} from \"../../DataTypes\";\n\ninterface SparkDataSet {\n  chartType: ChartType,\n  chartTitle: string,\n  chartData: { value: number }[]\n}\n\ninterface AYMeasureCardProps {\n  latestYear: number,\n  name: string,\n  description: string,\n  year: number,\n  value: number,\n  priorDelta?: number,\n  nextDelta?: number,\n  sparks: Array<SparkDataSet>,\n  unit?: UnitType\n}\n\nconst formatNumber = (num: number) => {\n  // Numbers less than 1,000 are just what they are.\n  if (num < 1000) {\n    return `${num}`;\n  }\n  // Numbers between 1,000 and 1,000,000 are formatted with 3 digit precision and a 'K'.\n  if (num < 1000000) {\n    return `${(num / 1000).toPrecision(3)}K`;\n  }\n  // Numbers more than 1M are formatted with an M.\n  return `${(num / 1000000).toPrecision(3)}M`;\n}\n\nconst AYMeasureCard: React.FunctionComponent<AYMeasureCardProps> = ({name, description, year, value, priorDelta, nextDelta, unit, sparks}) => {\n  let formattedValue = formatNumber(value);\n  if (unit)\n    if (unit === UnitType.Percent) {\n      formattedValue = `${formattedValue}%`;\n    } else if (unit === UnitType.Dollars) {\n      formattedValue = `$${formattedValue}`;\n    }\n  const formattedPriorDelta = (priorDelta && priorDelta < 0) ? `${priorDelta}` : `+${priorDelta}`;\n  const formattedNextDelta = (nextDelta && nextDelta < 0) ? `${nextDelta}` : `+${nextDelta}`;\n\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Grid>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"right\"\n                       style={{paddingLeft: '0px', paddingRight: '35px'}}>\n            {(year > 2015) ? (<div><Icon name=\"arrow left\"/> {formattedPriorDelta}% {year - 1} </div>) : ''}\n          </Grid.Column>\n          <Grid.Column style={{paddingLeft: 0, paddingRight: 0}} width={8}>\n            <div className=\"measureHeader\" style={{textAlign: 'center'}}>\n              <Statistic>\n                <Statistic.Label>{name}</Statistic.Label>\n                <Statistic.Value>{formattedValue}</Statistic.Value>\n              </Statistic>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\"\n                       style={{paddingLeft: '35px', paddingRight: '0px'}}>\n            {(year < 2019) ? (<div> {formattedNextDelta}% <Icon name=\"arrow right\"/> {year + 1} </div>) : ''}\n          </Grid.Column>\n        </Grid>\n        <Card.Description style={{paddingTop: '10px', minHeight: '75px'}}>{description}</Card.Description>\n        { sparks ? sparks.map((data, index) => <div key={index} style={{paddingTop: '10px'}}>\n          <Card.Description textAlign='center'>{data.chartTitle}</Card.Description>\n          { (data.chartType === ChartType.TrendLineSpark) ? <TrendLineSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.BarSpark) ? <BarSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.PieSpark) ? <div style={{paddingTop: '10px'}}><PieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.DemographicPieSpark) ? <div style={{paddingTop: '10px'}}><DemographicPieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.LabeledBarSpark) ? <div style={{paddingTop: '10px'}}><LabeledBarSpark data={data.chartData} /></div> : ''}\n        </div>) : ''}\n\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport type { SparkDataSet, AYMeasureCardProps };\nexport default AYMeasureCard;\n","import {AYMeasureCardProps} from \"./AYMeasureCard\";\nimport {ChartType} from \"../../Theme\";\nimport {AYPageDB, MeasureType} from \"../../DataTypes\";\n\nfunction computeDelta(year: number, dashboardDB: AYPageDB, measureType: MeasureType, offset: number) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const measureData = dashboardDB[measureType]!;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const currValue = measureData.trend[year]!.value!;\n  if (measureData.trend[`${year + offset}`]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const priorValue = measureData.trend[`${year + offset}`]!.value;\n    return Math.floor(((priorValue - currValue) / currValue) * 100);\n  }\n  return 0;\n}\n\nfunction makeCardProps(measureType: MeasureType, latestYear: number, year: number, dashboardDB: AYPageDB): AYMeasureCardProps {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const measureData = dashboardDB[measureType]!;\n  const name = measureData.name;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const value = measureData.trend[year]!.value!;\n  const description = measureData.description;\n  const unit = measureData.unitType;\n  const priorDelta = computeDelta(year, dashboardDB, measureType, -1);\n  const nextDelta = computeDelta(year, dashboardDB, measureType, 1);\n  const years = [latestYear - 4, latestYear - 3, latestYear - 2, latestYear -1, latestYear];\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const trendData = years.map(year => measureData.trend[`${year}`]!); // convert to ordered list of Measures.\n  for (const measure of trendData) {\n    // @ts-ignore\n    measure['currYear'] = year;\n  }\n  const fiveYearTrend = { chartType: ChartType.TrendLineSpark, chartTitle: 'Five year trend', chartData: trendData };\n  const breakdownChart = measureData.breakdowns[0];\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const breakdownSpark = {chartType: breakdownChart.chartType, chartTitle: breakdownChart.chartTitle, chartData: breakdownChart.chartData[year]!};\n  const sparks = [fiveYearTrend, breakdownSpark];\n  return { latestYear, name, value, description, unit, year, priorDelta, nextDelta, sparks }\n}\n\nexport {makeCardProps};\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport AYMeasureCard, {AYMeasureCardProps} from \"./AYMeasureCard\";\nimport {AYPageDB, MeasureType} from \"../../DataTypes\";\nimport {makeCardProps} from \"./AYMeasureCardProps\";\n\ninterface AYMeasureCardsProps {\n  latestYear: number,\n  year: number,\n  ayPageDB: AYPageDB\n}\n\n/** Create card props only for measures that are actually computed in the DB. */\nfunction makeCardInfo(latestYear: number, year: number, ayPageDB: AYPageDB) : AYMeasureCardProps[] {\n  const cardPropsList = [];\n  for (const measure of Object.values(MeasureType)) {\n    if (ayPageDB[measure]) {\n      cardPropsList.push(makeCardProps(measure, latestYear, year, ayPageDB));\n    }\n  }\n  return cardPropsList;\n}\n\n/** Displays a set of Cards, each containing an AcademicYearMeasure. */\nconst AYMeasureCards: React.FunctionComponent<AYMeasureCardsProps> = ({ latestYear, year, ayPageDB }) => {\n  const cardInfo = makeCardInfo(latestYear, year, ayPageDB);\n  return (\n    <Card.Group centered>\n      {cardInfo.map((info, index) => <AYMeasureCard key={index}  {...info}/>)}\n    </Card.Group>\n  );\n}\n\nexport default AYMeasureCards;\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport AYMeasureCards from \"./AYMeasureCards\";\nimport './AYTabbedContainer.css';\nimport {AYPageDB} from \"../../DataTypes\";\n\ninterface AYTabbedContainerProps  {\n  latestYear: number,\n  ayPageDB: AYPageDB\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst AYTabbedContainer: React.FunctionComponent<AYTabbedContainerProps> = ({ latestYear, ayPageDB }) => {\n  const years = [latestYear - 4, latestYear - 3, latestYear - 2, latestYear - 1, latestYear ];\n  const panes = years.map(year => { return { menuItem: `${year}`, render: () => <Tab.Pane><AYMeasureCards latestYear={latestYear} year={year} ayPageDB={ayPageDB}/></Tab.Pane>} })\n\n  return (\n    <Tab panes={panes} defaultActiveIndex={4}/>\n  );\n}\n\nexport default AYTabbedContainer;\n","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport AYTabbedContainer from \"./AYTabbedContainer\";\nimport {AYPageDB} from \"../../DataTypes\";\n\ntype AYPageProps = {\n  latestYear: number\n  ayPageDB: AYPageDB\n}\n\nconst AYPage: React.FunctionComponent<AYPageProps> = ({latestYear, ayPageDB}) => {\n  return (\n    <Container fluid style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <AYTabbedContainer latestYear={latestYear} ayPageDB={ayPageDB}/>\n    </Container>\n  );\n}\n\nexport default AYPage;\n","import {CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport {theme} from '../../Theme';\n\ntype InitiativeChartProps = {\n  data: any,\n  title: string,\n  dataKey: string[],\n  hideXAxis?: boolean\n  domain?: any\n}\n\nconst InitiativeChart: React.FunctionComponent<InitiativeChartProps> = ({data, dataKey, hideXAxis = true, domain = [0, 'auto'], title}) => {\n  const green = theme.color.green;\n  const purple = theme.color.purple;\n  return (\n    <div>\n      <Header textAlign='center' as='h4'>{title}</Header>\n      <LineChart width={600} height={200} data={data} syncId=\"anyId\" margin={{top: 0, right: 10, left: 0, bottom: 10}}>\n        <CartesianGrid strokeDasharray=\"3 3\"/>\n        <YAxis domain={domain}/>\n        <Tooltip/>\n        <Line type='monotone' dataKey={dataKey[0]} stroke={green} fill={green}/>\n        {dataKey[1] && <Line type='monotone' dataKey={dataKey[1]} stroke={purple} fill={purple}/>}\n        <Legend align='center' verticalAlign='bottom' height={36}/>\n        <XAxis dataKey=\"name\" hide={hideXAxis}/>\n      </LineChart>\n    </div>\n  )\n}\n\nexport default InitiativeChart;","import {Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport {theme} from '../../Theme';\n\nfunction InterventionChartTooltip({ payload, active }:any) {\n  if (active) {\n    console.log('payload', payload);\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">{`${payload && payload[0] && payload[0].payload.intervention}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n}\n\ntype InterventionChartProps = {\n  data: any,\n  title: string,\n}\n\nconst InterventionChart: React.FunctionComponent<InterventionChartProps> = ({data, title}) => {\n  const green = theme.color.green;\n  return (\n    <div>\n      <Header textAlign='center' as='h4'>{title}</Header>\n      <LineChart width={600} height={200} data={data} syncId=\"anyId\" margin={{top: 0, right: 10, left: 0, bottom: 10}}>\n        <YAxis domain={[0, 2]} interval={-1}/>\n        <Tooltip content={<InterventionChartTooltip />}/>\n        <Line type='monotone' dataKey='index' stroke={green} fill={green}/>\n        <XAxis dataKey=\"name\"/>\n      </LineChart>\n    </div>\n  )\n}\n\nexport default InterventionChart;","import React from 'react';\nimport {Container, Grid, Header} from 'semantic-ui-react';\nimport {TimelinePageDB} from \"../../DataTypes\";\nimport InitiativeChart from \"../../components/initiative-charts/InitiativeChart\"\nimport InterventionChart from \"../../components/initiative-charts/InterventionChart\";\n\n/**\n * Diversity Initiative:\n *   Percentage of women and Native Hawaiian graduates.\n *   Percentage of women and Native Hawaiians admitted.\n *   Percentage of women and Native Hawaiians retained.\n *   Time to Degree for women and Native Hawaiians\n *   Exit survey response: 'As a woman, I feel supported in this program.'\n *   Exit survey response: 'As a Native Hawaiian, I feel supported in this program.'\n */\n\ntype DiversityPageProps = {\n  latestYear: number\n  timelinePageDB: TimelinePageDB\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DiversityPage: React.FunctionComponent<DiversityPageProps> = ({latestYear, timelinePageDB}) => {\n  const graduates = [\n    {name: '2015', women: 17, nativehawaiians: 12},\n    {name: '2016', women: 24, nativehawaiians: 10},\n    {name: '2017', women: 27, nativehawaiians: 22},\n    {name: '2018', women: 37, nativehawaiians: 24},\n    {name: '2019', women: 40, nativehawaiians: 28},\n  ];\n  const admitted = [\n    {name: '2015', women: 21, nativehawaiians: 18},\n    {name: '2016', women: 34, nativehawaiians: 22},\n    {name: '2017', women: 47, nativehawaiians: 24},\n    {name: '2018', women: 45, nativehawaiians: 18},\n    {name: '2019', women: 57, nativehawaiians: 14},\n  ];\n  const exitSurvey = [\n    {name: '2015', women: 1.4, nativehawaiians: 1.8},\n    {name: '2016', women: 1.2, nativehawaiians: 1.2},\n    {name: '2017', women: 1.4, nativehawaiians: 1.5},\n    {name: '2018', women: 2.5, nativehawaiians: 1.8},\n    {name: '2019', women: 3.7, nativehawaiians: 2.4},\n  ];\n\n  const interventions = [\n    {name: '2015', value: 10, intervention: 'intervention1'},\n    {name: '2016', index: 1, value: 10, intervention: 'Established BIPOC student group.'},\n    {name: '2017',  value: 12, intervention: 'intervention3'},\n    {name: '2018', index: 1, value: 13, intervention: 'Created Dean\\'s office position for diversity'},\n    {name: '2019',  value: 14, intervention: 'intervention5'},\n  ];\n  return (\n    <Container style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <div>\n        <Header as='h2'>Increase Diversity</Header>\n        <p>The goal of the Diversity initiative is to increase both the numbers and percentage of women and Native Hawaiians graduating from this academic unit. </p>\n        <Grid>\n          <Grid.Row centered>\n            <InitiativeChart title='Graduates (%)' data={graduates} domain={[0,100]} dataKey={['women', 'nativehawaiians']}/>\n            <InitiativeChart title='Admitted (%)' data={admitted} domain={[0,100]} dataKey={['women', 'nativehawaiians']}/>\n            <InitiativeChart title='Exit Survey Response: As a woman (Native Hawaiian), I felt supported in this program.' data={exitSurvey} domain={[1,5]} dataKey={['women', 'nativehawaiians']} hideXAxis={false}/>\n            <InterventionChart title='Interventions' data={interventions}/>\n          </Grid.Row>\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n\nexport default DiversityPage;\n","import React from 'react';\nimport {Container, Grid, Header} from 'semantic-ui-react';\nimport {TimelinePageDB} from \"../../DataTypes\";\nimport InitiativeChart from \"../../components/initiative-charts/InitiativeChart\"\nimport InterventionChart from \"../../components/initiative-charts/InterventionChart\";\n\n/**\n * Professional Preparation Initiative:\n *   stakeholder survey, exit survey, course evaluation survey\n */\n\ntype ProfessionalPreparationPageProps = {\n  latestYear: number\n  timelinePageDB: TimelinePageDB\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ProfessionalPreparationPage: React.FunctionComponent<ProfessionalPreparationPageProps> = ({latestYear, timelinePageDB}) => {\n  const exitSurvey = [\n    {name: '2015', preparation: 1.7},\n    {name: '2016', preparation: 1.4},\n    {name: '2017', preparation: 2.7},\n    {name: '2018', preparation: 1.4},\n    {name: '2019', preparation: 3.0},\n  ];\n\n  const stakeholderSurvey = [\n    {name: '2015', preparation: 2.7},\n    {name: '2016', preparation: 2.4},\n    {name: '2017', preparation: 2.7},\n    {name: '2018', preparation: 3.4},\n    {name: '2019', preparation: 3.5},\n  ];\n\n  const courseEvaluationResponse = [\n    {name: '2015', programming: 20},\n    {name: '2016', programming: 22},\n    {name: '2017', programming: 40},\n    {name: '2018', programming: 60},\n    {name: '2019', programming: 85},\n  ];\n\n  const interventions = [\n    {name: '2015', value: 10, intervention: 'intervention1'},\n    {name: '2016', index: 1, value: 10, intervention: 'Annual review of courses for programming projects.'},\n    {name: '2017',  value: 12, intervention: 'intervention3'},\n    {name: '2018', index: 1, value: 13, intervention: 'Established capstone project'},\n    {name: '2019',  value: 14, intervention: 'intervention5'},\n  ];\n  return (\n    <Container style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <div>\n        <Header as='h2'>Improve Professional Preparation</Header>\n        <p>The goal of the Professional Preparation initiative is to increase the professional preparation of graduates from this academic unit.</p>\n        <Grid>\n          <Grid.Row centered>\n            <InitiativeChart title='Exit Survey: My undergraduate program prepared me for my professional career' data={exitSurvey} domain={[1,5]} dataKey={['preparation']} />\n            <InitiativeChart title='Stakeholder Survey: ICS undergraduates are well prepared for positions in my company.' data={stakeholderSurvey} domain={[1,5]} dataKey={['preparation']}/>\n            <InitiativeChart title='Course Evaluation Response: This class improved my software development skills. (%)' data={courseEvaluationResponse} domain={[0,100]} dataKey={['programming']} />\n            <InterventionChart title='Interventions' data={interventions}/>\n          </Grid.Row>\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n\nexport default ProfessionalPreparationPage;\n","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport AYPage from './pages/academic-year/AYPage';\nimport {DashboardDB} from \"./DataTypes\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport DiversityPage from \"./pages/initiatives/Diversity\";\nimport ProfessionalPreparationPage from \"./pages/initiatives/ProfessionalPreparation\";\n\ntype AppProps = {\n  latestYear: number,\n  title: string\n  dashboardDB: DashboardDB\n}\n\nconst App: React.FunctionComponent<AppProps> = ({title, latestYear, dashboardDB}) => {\n  return (\n    <Router>\n      <div>\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <NavBar title={title}/>\n        <Switch>\n          <Route path=\"/diversity\">\n            <DiversityPage latestYear={latestYear} timelinePageDB={dashboardDB.timelinePageDB}/>\n          </Route>\n          <Route path=\"/professional-preparation\">\n            <ProfessionalPreparationPage latestYear={latestYear} timelinePageDB={dashboardDB.timelinePageDB}/>\n          </Route>\n          <Route path=\"/\">\n            <AYPage latestYear={latestYear} ayPageDB={dashboardDB.ayPageDB}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {ChartType} from \"../Theme\";\nimport {\n  BreakdownChart,\n  AYPageDB,\n  Measurement,\n  MeasureTrend,\n  MeasureType,\n  UnitType,\n  BreakdownTrend, DashboardDB\n} from \"../DataTypes\";\n\nconst endYear = 2019;\nconst startYear = endYear - 4;\nconst yearList = [2015, 2016, 2017, 2018, 2019];\n\nfunction makeAYPageDB(): AYPageDB {\n  const dashboardDB: AYPageDB = {};\n  dashboardDB[MeasureType.SSH] = {\n    name: 'SSH',\n    unitType: UnitType.Number,\n    description: 'Measures the amount of instruction.',\n    trend: makeMeasurementTrend(1000, 3000),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.FACULTYFTE] = {\n    name: 'Faculty FTE',\n    unitType: UnitType.Number,\n    description: 'Measures the number of faculty available for teaching, research and service.',\n    trend: makeMeasurementTrend(15, 25),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.EXTRAMURALFUNDING] = {\n    name: 'Extramural Funding',\n    unitType: UnitType.Dollars,\n    description: 'Measures the dollar amount of funding brought in by faculty to this academic unit (or the University as a whole) for this AY',\n    trend: makeMeasurementTrend(2000000, 3000000),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.RETENTION] = {\n    name: 'Retention',\n    unitType: UnitType.Percent,\n    description: 'Measures the percentage of students entering the academic program who receive a degree in it.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.PUBLICATIONS] = {\n    name: 'Publications',\n    unitType: UnitType.Number,\n    description: 'Measures the number of published scholarly works.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByPublicationQualityBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATESTUDENTSUPPORTFTE] = {\n    name: 'Graduate Student Support FTE',\n    unitType: UnitType.Number,\n    description: 'Measures the number of graduate students receiving support in the form of tuition waivers and a monthly stipend.',\n    trend: makeMeasurementTrend(100, 200, 10),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATES] = {\n    name: 'Graduates',\n    unitType: UnitType.Number,\n    description: 'Measures the number of students receiving a degree.',\n    trend: makeMeasurementTrend(100, 200),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.TIMETODEGREE] = {\n    name: 'Time to Degree',\n    unitType: UnitType.Number,\n    description: 'Measures the number of semesters required by this year\\'s graduates to obtain their undergraduate degree.',\n    trend: makeMeasurementTrend(70, 100, 10),\n    breakdowns: makeByNumberSemesterBreakdowns()\n  }\n  dashboardDB[MeasureType.ADMISSIONS] = {\n    name: 'Admissions',\n    unitType: UnitType.Number,\n    description: 'Measures the number of students admitted.',\n    trend: makeMeasurementTrend(70, 100),\n    breakdowns: makeByDegreeProgramBreakdowns()\n  }\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE] = {\n    name: 'Course Evaluation Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"As a professional student, I found this course attractive and compatible with my work life.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE2] = {\n    name: 'Course Evaluation Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"This course provided opportunities for me to improve my software development skills\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.EXITSURVEYRESPONSE] = {\n    name: 'Exit Survey Response',\n    unitType: UnitType.Percent,\n    description: 'Measures responses to: \"If you could start your higher education experience over, would you still attend this program?',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeExitSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.STAKEHOLDERSURVEYRESPONSE] = {\n    name: 'Stakeholder Survey Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"I am satisfied with the quality of graduates from this program.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeStakeholderSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.INTERNSHIP] = {\n    name: 'Internship',\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an internship program.',\n    trend: makeMeasurementTrend(30, 50),\n    breakdowns: makeInternshipBreakdowns()\n  }\n  dashboardDB[MeasureType.UNDERGRADRESEARCHEXPERIENCE] = {\n    name: 'Undergraduate Research Experience',\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an undergraduate research experience.',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeUndergraduateResearchExperienceBreakdowns()\n  }\n  return dashboardDB;\n}\n\nfunction makeUndergraduateResearchExperienceBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeUndergraduateResearchExperienceMeasurements();\n  }\n  return [{ chartTitle: 'By funding', chartType: ChartType.PieSpark, chartData: trend }];\n}\n\nfunction makeInternshipBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeInternshipMeasurements();\n  }\n  return [{ chartTitle: 'By location', chartType: ChartType.PieSpark, chartData: trend }];\n}\n\nfunction makeStakeholderSurveyResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeStakeholderSurveyMeasurements();\n  }\n  return [{ chartTitle: 'By satisfaction', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeExitSurveyResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeExitSurveyMeasurements();\n  }\n  return [{ chartTitle: 'By response', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeCourseEvaluationResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeCourseEvaluationMeasurements();\n  }\n  return [{ chartTitle: 'By agreement', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByPublicationQualityBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makePublicationQualityMeasurements();\n  }\n  return [{ chartTitle: 'By publication quality', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByDegreeProgramBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByDegreeProgramMeasurements();\n  }\n  return [{ chartTitle: 'By degree program', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByFacultyBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeSortedMeasurements(15, 10);\n  }\n  return [{ chartTitle: 'By faculty', chartType: ChartType.BarSpark, chartData: trend }];\n}\n\nfunction makeByGenderEthnicityBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeDemographicMeasurements();\n  }\n  return [{ chartTitle: 'By gender, ethnicity', chartType: ChartType.DemographicPieSpark, chartData: trend }];\n}\n\nfunction makeByNumberSemesterBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByNumberSemesterMeasurements();\n  }\n  return [{ chartTitle: 'By number of semesters', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeUndergraduateResearchExperienceMeasurements(): Measurement[] {\n  const data = [];\n  const urop = 50 + Math.floor(Math.random() * 20);\n  const faculty = Math.floor(Math.random() * 10);\n  const unfunded = 100 - urop - faculty;\n  data.push({value: urop, label: 'UROP'});\n  data.push({value: faculty, label: 'Faculty'});\n  data.push({value: unfunded, label: 'Unfunded'});\n  return data;\n}\n\nfunction makeInternshipMeasurements(): Measurement[] {\n  const data = [];\n  const hawaii = 50 + Math.floor(Math.random() * 20);\n  const mainland = Math.floor(Math.random() * 10);\n  const other = 100 - hawaii - mainland;\n  data.push({value: hawaii, label: 'Hawaii'});\n  data.push({value: mainland, label: 'Mainland'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makeExitSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'UH'});\n  data.push({value: Math.floor(Math.random() * 80), label: 'Another school'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'No school'});\n  return data;\n}\n\nfunction makeStakeholderSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Unsatisfied'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Satisfied'});\n  return data;\n}\n\nfunction makeCourseEvaluationMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Disagree'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Agree'});\n  return data;\n}\n\nfunction makeByDegreeProgramMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.A.'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'M.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Ph.D.'});\n  return data;\n}\n\nfunction makeByNumberSemesterMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: 2, label: '< 6'});\n  data.push({value: Math.floor(Math.random() * 10), label: '6-8'});\n  data.push({value: Math.floor(Math.random() * 10), label: '8-10'});\n  data.push({value: Math.floor(Math.random() * 10), label: '10-12'});\n  data.push({value: 2, label: '12+'});\n  return data;\n}\n\nfunction makeDemographicMeasurements(): Measurement[] {\n  const women = Math.floor(Math.random() * 20) + 3;\n  const men = 100 - women;\n  const data = [];\n  data.push({value: women, label: 'Women'});\n  data.push({value: men, label: 'Men'});\n  const caucasian = 50 + Math.floor(Math.random() * 20);\n  const nativeHawaiian = Math.floor(Math.random() * 10);\n  const other = 100 - caucasian - nativeHawaiian;\n  data.push({value: caucasian, label: 'Caucasian'});\n  data.push({value: nativeHawaiian, label: 'Native Hawaiian'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makePublicationQualityMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 1'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 2'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Other'});\n  return data;\n}\n\n\nfunction makeMeasurementTrend(lower: number, upper: number, divisor = 1): MeasureTrend {\n const trend: MeasureTrend = {};\n for (const year of yearList) {\n   let value = Math.floor(Math.random() * (upper - lower) + lower);\n   value = value / divisor;\n   trend[year] = { value, year };\n }\n return trend;\n}\n\n\nfunction makeSortedMeasurements(num: number, range = 101): Measurement[] {\n  let data = [];\n  for (let i = 0; i < num; i++) {\n    data.push({value: Math.floor(Math.random() * range), year: 0});\n  }\n  data = data.sort(function (a, b) {\n    return a.value - b.value\n  });\n  for (let i = 0; i < num; i++) {\n    data[i].year = startYear + i;\n  }\n  return data;\n}\n\nfunction logDashboardDB(dashboardDB: DashboardDB) {\n  // @ts-ignore\n  console.log('dashboardDB', dashboardDB);\n}\n\nconst dashboardDB: DashboardDB = {\n  ayPageDB: makeAYPageDB(),\n  timelinePageDB: {}\n};\n\nlogDashboardDB(dashboardDB);\n\nexport { dashboardDB };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport { dashboardDB } from \"./data/SampleData\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title='UH Department Dashboard Template' latestYear={2019} dashboardDB={dashboardDB} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}