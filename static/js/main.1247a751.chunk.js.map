{"version":3,"sources":["Theme.tsx","images/uh-logo.png","NavBar.tsx","components/spark/SparkCharts.tsx","DataTypes.tsx","pages/landing/AYMeasureCard.tsx","pages/landing/AYMeasureCardProps.tsx","pages/landing/AYMeasureCards.tsx","pages/landing/AYTabbedContainer.tsx","pages/landing/LandingPage.tsx","App.tsx","data/SampleData.tsx","index.tsx"],"names":["ChartType","NavBar","title","Menu","style","marginBottom","attached","borderless","Item","Image","size","src","uhLogo","className","fontWeight","fontSize","theme","color","chartWidth","chartHeight","this","green","purple","lightGreen","red","yellow","trendLineSparkDot","dotProps","payload","year","currYear","stroke","fill","UnitType","MeasureType","BreakdownType","TrendLineSpark","data","width","height","isAnimationActive","type","dataKey","strokeWidth","dot","BarSpark","LabeledBarSpark","PieSpark","label","entry","cx","cy","outerRadius","DemographicPieSpark","data1","slice","data2","length","AYMeasureCard","num","name","description","value","priorDelta","nextDelta","unit","sparks","formattedValue","toPrecision","Percent","Dollars","formattedPriorDelta","formattedNextDelta","Card","raised","Content","Grid","Column","verticalAlign","textAlign","paddingLeft","paddingRight","Icon","Statistic","Label","Value","Description","paddingTop","minHeight","map","index","key","chartTitle","chartType","chartData","computeDelta","dashboardDB","measureType","offset","measureData","currValue","trend","priorValue","Math","floor","makeCardProps","latestYear","unitType","trendData","fiveYearTrend","breakdownChart","breakdowns","AYMeasureCards","cardInfo","cardPropsList","Object","values","measure","push","makeCardInfo","Group","centered","info","AYTabbedContainer","panes","menuItem","render","Tab","Pane","defaultActiveIndex","LandingPage","Container","fluid","App","Helmet","yearList","makeUndergraduateResearchExperienceBreakdowns","makeUndergraduateResearchExperienceMeasurements","makeInternshipBreakdowns","makeInternshipMeasurements","makeStakeholderSurveyResponseBreakdowns","makeStakeholderSurveyMeasurements","makeExitSurveyResponseBreakdowns","makeExitSurveyMeasurements","makeCourseEvaluationResponseBreakdowns","makeCourseEvaluationMeasurements","makeByPublicationQualityBreakdowns","makePublicationQualityMeasurements","makeByDegreeProgramBreakdowns","makeByDegreeProgramMeasurements","makeByFacultyBreakdowns","makeSortedMeasurements","makeByGenderEthnicityBreakdowns","makeDemographicMeasurements","makeByNumberSemesterBreakdowns","makeByNumberSemesterMeasurements","urop","random","faculty","unfunded","hawaii","mainland","other","women","men","caucasian","nativeHawaiian","makeMeasurementTrend","lower","upper","divisor","range","i","sort","a","b","endYear","SSH","Number","FACULTYFTE","EXTRAMURALFUNDING","RETENTION","PUBLICATIONS","GRADUATESTUDENTSUPPORTFTE","GRADUATES","TIMETODEGREE","ADMISSIONS","COURSEEVALUATIONRESPONSE","COURSEEVALUATIONRESPONSE2","EXITSURVEYRESPONSE","STAKEHOLDERSURVEYRESPONSE","INTERNSHIP","UNDERGRADRESEARCHEXPERIENCE","makeDashboardDB","console","log","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1247a751.chunk.js","sourcesContent":["/* Provide access to various thematic elements. */\n\nclass Theme {\n  color: Record<string, string>;\n  chartWidth: number;\n  chartHeight: number;\n  constructor() {\n    this.color = {};\n    this.color.green = '#376551';\n    this.color.purple = '#7C64E8';\n    this.color.lightGreen = '#4DE8A5';\n    this.color.red = '#E84F35';\n    this.color.yellow = '#E8D541';\n    this.chartWidth = 325;\n    this.chartHeight = 100;\n  }\n}\n\nconst theme = new Theme();\n\nenum ChartType {\n  TrendLineSpark = 'TrendLineSpark',\n  BarSpark = 'BarSpark',\n  PieSpark = 'PieSpark',\n  DemographicPieSpark = 'DemographicPieSpark',\n  LabeledBarSpark = 'LabeledBarSpark'\n}\n\nexport { theme, ChartType };\n","export default __webpack_public_path__ + \"static/media/uh-logo.1f7898fc.png\";","import React from 'react';\nimport {Menu, Image} from 'semantic-ui-react';\nimport uhLogo from './images/uh-logo.png';\n\ntype NavBarProps =  {\n  title?: string\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst NavBar: React.FunctionComponent<NavBarProps> = ({ title = 'UH Dept Dashboard' }) => {\n  const menuStyle = {marginBottom: '20px'};\n  return (\n    <Menu style={menuStyle} attached=\"top\" borderless>\n      <Menu.Item>\n        <Image size='mini' src={uhLogo}/>\n      </Menu.Item>\n      <Menu.Item>\n        <span className='uh-green' style={{fontWeight: 800, fontSize: '24px'}}>{title}</span>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport {LineChart, Line, BarChart, Bar, PieChart, Pie, XAxis, Dot, DotProps, Tooltip} from 'recharts';\nimport {theme} from '../../Theme';\n\ninterface SparkProps {\n  data: { value: number, label?: string, year?: number }[]\n}\n\nfunction trendLineSparkDot(dotProps: JSX.IntrinsicAttributes & JSX.IntrinsicClassAttributes<Dot> & Readonly<DotProps> & Readonly<{ children?: React.ReactNode; }>) {\n  // @ts-ignore\n  if (dotProps.payload.year === dotProps.payload.currYear) {\n    // @ts-ignore\n    dotProps.stroke = 'red';\n    // @ts-ignore\n    dotProps.fill = 'red';\n  }\n  return <Dot {...dotProps}/>\n}\n\nconst TrendLineSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <LineChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Line isAnimationActive={false} type='monotone' dataKey='value' stroke={theme.color.green} strokeWidth={2} dot={trendLineSparkDot} />\n      <Tooltip />\n    </LineChart>\n  )\n}\n\nconst BarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n      <Tooltip />\n    </BarChart>\n  )\n}\n\nconst LabeledBarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n      <XAxis dataKey='label'/>\n      <Tooltip/>\n    </BarChart>\n  )\n}\n\nconst PieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/2} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n      <Tooltip/>\n    </PieChart>\n  )\n}\n\nconst DemographicPieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  const data1 = data.slice(0,2);\n  const data2 = data.slice(2, data.length);\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data1} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/4} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n      <Pie data={data2} dataKey='value' fill={theme.color.green} isAnimationActive={false} cx={(theme.chartWidth * 4)/5} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} label={(entry) => entry.label}/>\n      <Tooltip/>\n    </PieChart>\n  )\n}\n\nexport type { SparkProps };\nexport { TrendLineSpark, BarSpark, PieSpark, DemographicPieSpark, LabeledBarSpark };\n","/**\n * The units associated with a Measure.\n */\nimport {ChartType} from \"./Theme\";\n\nenum UnitType {\n  Dollars = '$',\n  Percent = '%',\n  Number = 'Number'\n}\n\n/**\n * All of the possible Measures.\n */\nenum MeasureType {\n  SSH= 'SSH',\n  FACULTYFTE = 'FACULTYFTE',\n  EXTRAMURALFUNDING = 'EXTRAMURALFUNDING',\n  RETENTION = 'RETENTION',\n  PUBLICATIONS = 'PUBLICATIONS',\n  GRADUATESTUDENTSUPPORTFTE = 'GRADUATESTUDENTSUPPORTFTE',\n  GRADUATES = 'GRADUATES',\n  TIMETODEGREE = 'TIMETODEGREE',\n  ADMISSIONS = 'ADMISSIONS',\n  COURSEEVALUATIONRESPONSE = 'COURSEEVALUATIONRESPONSE',\n  COURSEEVALUATIONRESPONSE2 = 'COURSEEVALUATIONRESPONSE2',\n  EXITSURVEYRESPONSE = 'EXITSURVEYRESPONSE',\n  STAKEHOLDERSURVEYRESPONSE = 'STAKEHOLDERSURVEYRESPONSE',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADRESEARCHEXPERIENCE = 'UNDERGRADRESEARCHEXPERIENCE'\n}\n\n/**\n * All of the possible Breakdowns.\n */\nenum BreakdownType {\n  BYFACULTY = 'BYFACULTY',\n  DEMOGRAPHIC = 'DEMOGRAPHIC',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADUATERESEARCHEXPERIENCE  = 'UNDERGRADUATERESEARCHEXPERIENCE',\n  PUBLICATIONTIER = 'PUBLICATIONTIER',\n  TIMETODEGREE = 'TIMETODEGREE',\n  DEGREEPROGRAM = 'DEGREEPROGRAM',\n  NUMBERSEMESTERS = 'NUMBERSEMESTERS',\n  COURSEEVALUATION = 'COURSEEVALUATION',\n  EXITSURVEY = 'EXITSURVEY',\n  STAKEHOLDERSURVEY = 'STAKEHOLDERSURVEY'\n}\n\n/**\n * A single, primitive measurement. All Measures and Breakdowns are ultimately one or more Measurements.\n * Example: { value: 4 }\n */\ninterface Measurement {\n  value: number,\n  label?: string,\n  year?: number\n}\n\n/**\n * All Measures compute a single Measurement per year. The \"trend\" is the past 5 years of the Measure.\n * Example: { 2015: {value: 2}, 2016: {value: 3}, 2017: {value: 4}, 2018: {value: 5}, 2019: {value: 1}}\n */\ntype MeasureTrend = {\n  [key in string]? : Measurement\n}\n\n/**\n * Breakdowns also have a \"trend\", but a breakdown trend has a set of Measurements per year.\n * Label is typically required, or the order of occurrence in the array of Measurements is significant.\n * Example: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}\n */\ntype BreakdownTrend = {\n  [key in string]? : Measurement[]\n}\n\n/**\n * Provides the title, type, and data (over five years) for a Breakdown Chart.\n * Example: { chartType: 'BarSpark', chartTitle: 'By gender, ethnicity', chartData: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}}\n */\ninterface BreakdownChart {\n  chartType: ChartType,\n  chartTitle: string,\n  chartData: BreakdownTrend\n}\n\n/**\n * The global data structure containing all Measures and Breakdowns.\n *  db = {\n *    SSH: {\n *      name: 'SSH',\n *      unitType: 'Number',\n *      description: 'Measures the amount of instruction.'\n *      trend: { 2015: {value: 23}, 2016: {value: 24}, 2017: {value: 25}, 2018: {value: 26}, 2019: {value: 27}},\n *      breakdowns: [\n *        { chartTitle: 'By gender, ethnicity',\n *          chartType: 'DemographicPieSpark',\n *          chartData: { 2015: [{value: 2}, {value: 3}, {value: 4}, {value: 6}], 2016: [{value: 45} ... ] }\n *        }\n *      ]\n *    }\n *  }*\n */\ntype DashboardDB = {\n  [measureType in MeasureType]?: {\n    name: string,\n    unitType: UnitType,\n    description: string,\n    trend: MeasureTrend,\n    breakdowns: BreakdownChart[]\n  }\n}\n\nexport type { MeasureTrend, Measurement, DashboardDB, BreakdownTrend, BreakdownChart } ;\nexport { UnitType, MeasureType, BreakdownType };\n\n\n","import React from 'react';\nimport {Card, Statistic, Grid, Icon} from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport {ChartType } from '../../Theme';\nimport {TrendLineSpark, BarSpark, DemographicPieSpark, LabeledBarSpark, PieSpark} from '../../components/spark/SparkCharts';\nimport {UnitType} from \"../../DataTypes\";\n\ninterface SparkDataSet {\n  chartType: ChartType,\n  chartTitle: string,\n  chartData: { value: number }[]\n}\n\ninterface AYMeasureCardProps {\n  latestYear: number,\n  name: string,\n  description: string,\n  year: number,\n  value: number,\n  priorDelta?: number,\n  nextDelta?: number,\n  sparks: Array<SparkDataSet>,\n  unit?: UnitType\n}\n\nconst formatNumber = (num: number) => {\n  // Numbers less than 1,000 are just what they are.\n  if (num < 1000) {\n    return `${num}`;\n  }\n  // Numbers between 1,000 and 1,000,000 are formatted with 3 digit precision and a 'K'.\n  if (num < 1000000) {\n    return `${(num / 1000).toPrecision(3)}K`;\n  }\n  // Numbers more than 1M are formatted with an M.\n  return `${(num / 1000000).toPrecision(3)}M`;\n}\n\nconst AYMeasureCard: React.FunctionComponent<AYMeasureCardProps> = ({name, description, year, value, priorDelta, nextDelta, unit, sparks}) => {\n  let formattedValue = formatNumber(value);\n  if (unit)\n    if (unit === UnitType.Percent) {\n      formattedValue = `${formattedValue}%`;\n    } else if (unit === UnitType.Dollars) {\n      formattedValue = `$${formattedValue}`;\n    }\n  const formattedPriorDelta = (priorDelta && priorDelta < 0) ? `${priorDelta}` : `+${priorDelta}`;\n  const formattedNextDelta = (nextDelta && nextDelta < 0) ? `${nextDelta}` : `+${nextDelta}`;\n\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Grid>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"right\"\n                       style={{paddingLeft: '0px', paddingRight: '35px'}}>\n            {(year > 2015) ? (<div><Icon name=\"arrow left\"/> {formattedPriorDelta}% {year - 1} </div>) : ''}\n          </Grid.Column>\n          <Grid.Column style={{paddingLeft: 0, paddingRight: 0}} width={8}>\n            <div className=\"measureHeader\" style={{textAlign: 'center'}}>\n              <Statistic>\n                <Statistic.Label>{name}</Statistic.Label>\n                <Statistic.Value>{formattedValue}</Statistic.Value>\n              </Statistic>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\"\n                       style={{paddingLeft: '35px', paddingRight: '0px'}}>\n            {(year < 2019) ? (<div> {formattedNextDelta}% <Icon name=\"arrow right\"/> {year + 1} </div>) : ''}\n          </Grid.Column>\n        </Grid>\n        <Card.Description style={{paddingTop: '10px', minHeight: '75px'}}>{description}</Card.Description>\n        { sparks ? sparks.map((data, index) => <div key={index} style={{paddingTop: '10px'}}>\n          <Card.Description textAlign='center'>{data.chartTitle}</Card.Description>\n          { (data.chartType === ChartType.TrendLineSpark) ? <TrendLineSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.BarSpark) ? <BarSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.PieSpark) ? <div style={{paddingTop: '10px'}}><PieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.DemographicPieSpark) ? <div style={{paddingTop: '10px'}}><DemographicPieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.LabeledBarSpark) ? <div style={{paddingTop: '10px'}}><LabeledBarSpark data={data.chartData} /></div> : ''}\n        </div>) : ''}\n\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport type { SparkDataSet, AYMeasureCardProps };\nexport default AYMeasureCard;\n","import {AYMeasureCardProps} from \"./AYMeasureCard\";\nimport {ChartType} from \"../../Theme\";\nimport {DashboardDB, MeasureType} from \"../../DataTypes\";\n\nfunction computeDelta(year: number, dashboardDB: DashboardDB, measureType: MeasureType, offset: number) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const measureData = dashboardDB[measureType]!;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const currValue = measureData.trend[year]!.value!;\n  if (measureData.trend[`${year + offset}`]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const priorValue = measureData.trend[`${year + offset}`]!.value;\n    return Math.floor(((priorValue - currValue) / currValue) * 100);\n  }\n  return 0;\n}\n\nfunction makeCardProps(measureType: MeasureType, latestYear: number, year: number, dashboardDB: DashboardDB): AYMeasureCardProps {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const measureData = dashboardDB[measureType]!;\n  const name = measureData.name;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const value = measureData.trend[year]!.value!;\n  const description = measureData.description;\n  const unit = measureData.unitType;\n  const priorDelta = computeDelta(year, dashboardDB, measureType, -1);\n  const nextDelta = computeDelta(year, dashboardDB, measureType, 1);\n  const years = [latestYear - 4, latestYear - 3, latestYear - 2, latestYear -1, latestYear];\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const trendData = years.map(year => measureData.trend[`${year}`]!); // convert to ordered list of Measures.\n  for (const measure of trendData) {\n    // @ts-ignore\n    measure['currYear'] = year;\n  }\n  const fiveYearTrend = { chartType: ChartType.TrendLineSpark, chartTitle: 'Five year trend', chartData: trendData };\n  const breakdownChart = measureData.breakdowns[0];\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const breakdownSpark = {chartType: breakdownChart.chartType, chartTitle: breakdownChart.chartTitle, chartData: breakdownChart.chartData[year]!};\n  const sparks = [fiveYearTrend, breakdownSpark];\n  return { latestYear, name, value, description, unit, year, priorDelta, nextDelta, sparks }\n}\n\nexport {makeCardProps};\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport AYMeasureCard, {AYMeasureCardProps} from \"./AYMeasureCard\";\nimport {DashboardDB, MeasureType} from \"../../DataTypes\";\nimport {makeCardProps} from \"./AYMeasureCardProps\";\n\ninterface AYMeasureCardsProps {\n  latestYear: number,\n  year: number,\n  dashboardDB: DashboardDB\n}\n\n/** Create card props only for measures that are actually computed in the DB. */\nfunction makeCardInfo(latestYear: number, year: number, dashboardDB: DashboardDB) : AYMeasureCardProps[] {\n  const cardPropsList = [];\n  for (const measure of Object.values(MeasureType)) {\n    if (dashboardDB[measure]) {\n      cardPropsList.push(makeCardProps(measure, latestYear, year, dashboardDB));\n    }\n  }\n  return cardPropsList;\n}\n\n/** Displays a set of Cards, each containing an AcademicYearMeasure. */\nconst AYMeasureCards: React.FunctionComponent<AYMeasureCardsProps> = ({ latestYear, year, dashboardDB }) => {\n  const cardInfo = makeCardInfo(latestYear, year, dashboardDB);\n  return (\n    <Card.Group centered>\n      {cardInfo.map((info, index) => <AYMeasureCard key={index}  {...info}/>)}\n    </Card.Group>\n  );\n}\n\nexport default AYMeasureCards;\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport AYMeasureCards from \"./AYMeasureCards\";\nimport './AYTabbedContainer.css';\nimport {DashboardDB} from \"../../DataTypes\";\n\ninterface AYTabbedContainerProps  {\n  latestYear: number,\n  dashboardDB: DashboardDB\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst AYTabbedContainer: React.FunctionComponent<AYTabbedContainerProps> = ({ latestYear, dashboardDB }) => {\n  const years = [latestYear - 4, latestYear - 3, latestYear - 2, latestYear - 1, latestYear ];\n  const panes = years.map(year => { return { menuItem: `${year}`, render: () => <Tab.Pane><AYMeasureCards latestYear={latestYear} year={year} dashboardDB={dashboardDB}/></Tab.Pane>} })\n\n  return (\n    <Tab panes={panes} defaultActiveIndex={4}/>\n  );\n}\n\nexport default AYTabbedContainer;\n","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport AYTabbedContainer from \"./AYTabbedContainer\";\nimport {DashboardDB} from \"../../DataTypes\";\n\ntype LandingPageProps = {\n  latestYear: number\n  dashboardDB: DashboardDB\n}\n\nconst LandingPage: React.FunctionComponent<LandingPageProps> = ({latestYear, dashboardDB}) => {\n\n\n  return (\n    <Container fluid style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <AYTabbedContainer latestYear={latestYear} dashboardDB={dashboardDB}/>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport LandingPage from './pages/landing/LandingPage';\nimport { DashboardDB } from \"./DataTypes\";\n\ntype AppProps = {\n  latestYear: number,\n  title: string\n  dashboardDB: DashboardDB\n}\n\nconst App: React.FunctionComponent<AppProps> = ({title, latestYear, dashboardDB}) => {\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <NavBar title={title}/>\n      <LandingPage latestYear={latestYear} dashboardDB={dashboardDB}/>\n    </div>\n  );\n}\n\nexport default App;\n","import {ChartType} from \"../Theme\";\nimport {\n  BreakdownChart,\n  DashboardDB,\n  Measurement,\n  MeasureTrend,\n  MeasureType,\n  UnitType,\n  BreakdownTrend\n} from \"../DataTypes\";\n\nconst endYear = 2019;\nconst startYear = endYear - 4;\nconst yearList = [2015, 2016, 2017, 2018, 2019];\n\nfunction makeDashboardDB(): DashboardDB {\n  const dashboardDB: DashboardDB = {};\n  dashboardDB[MeasureType.SSH] = {\n    name: 'SSH',\n    unitType: UnitType.Number,\n    description: 'Measures the amount of instruction.',\n    trend: makeMeasurementTrend(1000, 3000),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.FACULTYFTE] = {\n    name: 'Faculty FTE',\n    unitType: UnitType.Number,\n    description: 'Measures the number of faculty available for teaching, research and service.',\n    trend: makeMeasurementTrend(15, 25),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.EXTRAMURALFUNDING] = {\n    name: 'Extramural Funding',\n    unitType: UnitType.Dollars,\n    description: 'Measures the dollar amount of funding brought in by faculty to this academic unit (or the University as a whole) for this AY',\n    trend: makeMeasurementTrend(2000000, 3000000),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.RETENTION] = {\n    name: 'Retention',\n    unitType: UnitType.Percent,\n    description: 'Measures the percentage of students entering the academic program who receive a degree in it.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.PUBLICATIONS] = {\n    name: 'Publications',\n    unitType: UnitType.Number,\n    description: 'Measures the number of published scholarly works.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByPublicationQualityBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATESTUDENTSUPPORTFTE] = {\n    name: 'Graduate Student Support FTE',\n    unitType: UnitType.Number,\n    description: 'Measures the number of graduate students receiving support in the form of tuition waivers and a monthly stipend.',\n    trend: makeMeasurementTrend(100, 200, 10),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATES] = {\n    name: 'Graduates',\n    unitType: UnitType.Number,\n    description: 'Measures the number of students receiving a degree.',\n    trend: makeMeasurementTrend(100, 200),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.TIMETODEGREE] = {\n    name: 'Time to Degree',\n    unitType: UnitType.Number,\n    description: 'Measures the number of semesters required by this year\\'s graduates to obtain their undergraduate degree.',\n    trend: makeMeasurementTrend(70, 100, 10),\n    breakdowns: makeByNumberSemesterBreakdowns()\n  }\n  dashboardDB[MeasureType.ADMISSIONS] = {\n    name: 'Admissions',\n    unitType: UnitType.Number,\n    description: 'Measures the number of students admitted.',\n    trend: makeMeasurementTrend(70, 100),\n    breakdowns: makeByDegreeProgramBreakdowns()\n  }\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE] = {\n    name: 'Course Evaluation Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"As a professional student, I found this course attractive and compatible with my work life.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE2] = {\n    name: 'Course Evaluation Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"This course provided opportunities for me to improve my software development skills\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.EXITSURVEYRESPONSE] = {\n    name: 'Exit Survey Response',\n    unitType: UnitType.Percent,\n    description: 'Measures responses to: \"If you could start your higher education experience over, would you still attend this program?',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeExitSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.STAKEHOLDERSURVEYRESPONSE] = {\n    name: 'Stakeholder Survey Response',\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"I am satisfied with the quality of graduates from this program.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeStakeholderSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.INTERNSHIP] = {\n    name: 'Internship',\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an internship program.',\n    trend: makeMeasurementTrend(30, 50),\n    breakdowns: makeInternshipBreakdowns()\n  }\n  dashboardDB[MeasureType.UNDERGRADRESEARCHEXPERIENCE] = {\n    name: 'Undergraduate Research Experience',\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an undergraduate research experience.',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeUndergraduateResearchExperienceBreakdowns()\n  }\n  return dashboardDB;\n}\n\nfunction makeUndergraduateResearchExperienceBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeUndergraduateResearchExperienceMeasurements();\n  }\n  return [{ chartTitle: 'By funding', chartType: ChartType.PieSpark, chartData: trend }];\n}\n\nfunction makeInternshipBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeInternshipMeasurements();\n  }\n  return [{ chartTitle: 'By location', chartType: ChartType.PieSpark, chartData: trend }];\n}\n\nfunction makeStakeholderSurveyResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeStakeholderSurveyMeasurements();\n  }\n  return [{ chartTitle: 'By satisfaction', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeExitSurveyResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeExitSurveyMeasurements();\n  }\n  return [{ chartTitle: 'By response', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeCourseEvaluationResponseBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeCourseEvaluationMeasurements();\n  }\n  return [{ chartTitle: 'By agreement', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByPublicationQualityBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makePublicationQualityMeasurements();\n  }\n  return [{ chartTitle: 'By publication quality', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByDegreeProgramBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByDegreeProgramMeasurements();\n  }\n  return [{ chartTitle: 'By degree program', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeByFacultyBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeSortedMeasurements(15, 10);\n  }\n  return [{ chartTitle: 'By faculty', chartType: ChartType.BarSpark, chartData: trend }];\n}\n\nfunction makeByGenderEthnicityBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeDemographicMeasurements();\n  }\n  return [{ chartTitle: 'By gender, ethnicity', chartType: ChartType.DemographicPieSpark, chartData: trend }];\n}\n\nfunction makeByNumberSemesterBreakdowns(): BreakdownChart[] {\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByNumberSemesterMeasurements();\n  }\n  return [{ chartTitle: 'By number of semesters', chartType: ChartType.LabeledBarSpark, chartData: trend }];\n}\n\nfunction makeUndergraduateResearchExperienceMeasurements(): Measurement[] {\n  const data = [];\n  const urop = 50 + Math.floor(Math.random() * 20);\n  const faculty = Math.floor(Math.random() * 10);\n  const unfunded = 100 - urop - faculty;\n  data.push({value: urop, label: 'UROP'});\n  data.push({value: faculty, label: 'Faculty'});\n  data.push({value: unfunded, label: 'Unfunded'});\n  return data;\n}\n\nfunction makeInternshipMeasurements(): Measurement[] {\n  const data = [];\n  const hawaii = 50 + Math.floor(Math.random() * 20);\n  const mainland = Math.floor(Math.random() * 10);\n  const other = 100 - hawaii - mainland;\n  data.push({value: hawaii, label: 'Hawaii'});\n  data.push({value: mainland, label: 'Mainland'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makeExitSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'UH'});\n  data.push({value: Math.floor(Math.random() * 80), label: 'Another school'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'No school'});\n  return data;\n}\n\nfunction makeStakeholderSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Unsatisfied'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Satisfied'});\n  return data;\n}\n\nfunction makeCourseEvaluationMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Disagree'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Agree'});\n  return data;\n}\n\nfunction makeByDegreeProgramMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.A.'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'M.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Ph.D.'});\n  return data;\n}\n\nfunction makeByNumberSemesterMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: 2, label: '< 6'});\n  data.push({value: Math.floor(Math.random() * 10), label: '6-8'});\n  data.push({value: Math.floor(Math.random() * 10), label: '8-10'});\n  data.push({value: Math.floor(Math.random() * 10), label: '10-12'});\n  data.push({value: 2, label: '12+'});\n  return data;\n}\n\nfunction makeDemographicMeasurements(): Measurement[] {\n  const women = Math.floor(Math.random() * 20) + 3;\n  const men = 100 - women;\n  const data = [];\n  data.push({value: women, label: 'Women'});\n  data.push({value: men, label: 'Men'});\n  const caucasian = 50 + Math.floor(Math.random() * 20);\n  const nativeHawaiian = Math.floor(Math.random() * 10);\n  const other = 100 - caucasian - nativeHawaiian;\n  data.push({value: caucasian, label: 'Caucasian'});\n  data.push({value: nativeHawaiian, label: 'Native Hawaiian'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makePublicationQualityMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 1'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 2'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Other'});\n  return data;\n}\n\n\nfunction makeMeasurementTrend(lower: number, upper: number, divisor = 1): MeasureTrend {\n const trend: MeasureTrend = {};\n for (const year of yearList) {\n   let value = Math.floor(Math.random() * (upper - lower) + lower);\n   value = value / divisor;\n   trend[year] = { value, year };\n }\n return trend;\n}\n\n\nfunction makeSortedMeasurements(num: number, range = 101): Measurement[] {\n  let data = [];\n  for (let i = 0; i < num; i++) {\n    data.push({value: Math.floor(Math.random() * range), year: 0});\n  }\n  data = data.sort(function (a, b) {\n    return a.value - b.value\n  });\n  for (let i = 0; i < num; i++) {\n    data[i].year = startYear + i;\n  }\n  return data;\n}\n\nfunction logDashboardDB(dashboardDB: DashboardDB) {\n  // @ts-ignore\n  console.log('dashboardDB', dashboardDB);\n}\n\nconst dashboardDB = makeDashboardDB();\nlogDashboardDB(dashboardDB);\n\nexport { dashboardDB };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport { dashboardDB } from \"./data/SampleData\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title='UH Department Dashboard Template' latestYear={2019} dashboardDB = {dashboardDB} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}