{"version":3,"sources":["Theme.tsx","images/uh-logo.png","NavBar.tsx","components/spark/SparkCharts.tsx","DataTypes.tsx","pages/landing/AYMeasureCard.tsx","data/SampleData.tsx","pages/landing/AYMeasureCards.tsx","pages/landing/AYTabbedContainer.tsx","pages/landing/LandingPage.tsx","App.tsx","index.tsx"],"names":["Units","ChartType","NavBar","title","Menu","style","marginBottom","attached","borderless","Item","Image","size","src","uhLogo","className","fontWeight","fontSize","theme","color","chartWidth","chartHeight","this","green","purple","lightGreen","red","yellow","customDot","dotProps","payload","year","stroke","fill","UnitType","MeasureType","BreakdownType","LineSpark","data","width","height","isAnimationActive","type","dataKey","strokeWidth","dot","BarSpark","LabeledBarSpark","PieSpark","label","entry","cx","cy","outerRadius","DemographicPieSpark","data1","slice","data2","length","AYMeasureCard","num","name","description","value","priorDelta","nextDelta","unit","sparks","formattedValue","toPrecision","Percent","Dollars","formattedPriorDelta","formattedNextDelta","Card","raised","Content","Grid","Column","verticalAlign","textAlign","paddingLeft","paddingRight","Icon","Statistic","Label","Value","Description","paddingTop","map","index","key","chartTitle","chartType","chartData","startYear","endYear","yearList","makeCourseEvaluationResponseBreakdowns","breakdowns","trend","makeCourseEvaluationMeasurements","COURSEEVALUATION","makeByPublicationQualityBreakdowns","makePublicationQualityMeasurements","PUBLICATIONTIER","makeByDegreeProgramBreakdowns","makeByDegreeProgramMeasurements","DEGREEPROGRAM","makeByFacultyBreakdowns","makeSortedMeasurements","BYFACULTY","makeByGenderEthnicityBreakdowns","makeDemographicMeasurements","DEMOGRAPHIC","makeByNumberSemesterBreakdowns","makeByNumberSemesterMeasurements","NUMBERSEMESTERS","push","Math","floor","random","women","men","caucasian","nativeHawaiian","other","makeMeasurementTrend","lower","upper","divisor","makeRandomMeasurements","range","i","sort","a","b","makeDemographicPieBreakdown","makeCourseEvaluationBreakdown","makeByFacultyBreakdown","makeDelta","makeAYValue","makeAYMeasureCardProps","makeSSHCardProps","props","makeFacultyFTEProps","makeExtramuralFundingProps","makeRetentionProps","makePublicationsProps","makePublicationTierBreakdown","makeGraduateStudentSupportFTEProps","makeGraduatesProps","makeTDDProps","makeTimeToDegreeBreakdown","makeAdmissionsProps","makeAdmissionsBreakdown","makeCourseEvaluationOneProps","makeCourseEvaluationTwoProps","makeExitSurveyProps","makeExitSurveyBreakdown","makeStakeholderSurveyProps","makeStakeholderSurveyBreakdown","makeInternshipProps","hawaii","mainland","makeInternshipBreakdown","makeUndergraduateResearchExperienceProps","urop","faculty","unfunded","makeUndergraduateResearchExperienceBreakdown","dashboardDB","SSH","unitType","Number","FACULTYFTE","EXTRAMURALFUNDING","RETENTION","PUBLICATIONS","GRADUATESTUDENTSUPPORTFTE","GRADUATES","TIMETODEGREE","ADMISSIONS","COURSEEVALUATIONRESPONSE","makeDashboardDB","AYMeasureCards","cardInfo","makeCardInfo","Group","centered","info","AYTabbedContainer","years","panes","menuItem","render","Tab","Pane","console","log","defaultActiveIndex","LandingPage","latestAcademicYear","Container","fluid","App","Helmet","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2250ce.chunk.js","sourcesContent":["/* Provide access to various thematic elements. */\n\nclass Theme {\n  color: Record<string, string>;\n  chartWidth: number;\n  chartHeight: number;\n  constructor() {\n    this.color = {};\n    this.color.green = '#376551';\n    this.color.purple = '#7C64E8';\n    this.color.lightGreen = '#4DE8A5';\n    this.color.red = '#E84F35';\n    this.color.yellow = '#E8D541';\n    this.chartWidth = 325;\n    this.chartHeight = 100;\n  }\n}\n\nconst theme = new Theme();\n\nenum Units {\n  Dollars = '$',\n  Percent = '%'\n}\n\nenum ChartType {\n  LineSpark = 'LineSpark',\n  BarSpark = 'BarSpark',\n  PieSpark = 'PieSpark',\n  DemographicPieSpark = 'DemographicPieSpark',\n  LabeledBarSpark = 'LabeledBarSpark'\n}\n\nexport { theme, Units, ChartType };\n","export default __webpack_public_path__ + \"static/media/uh-logo.1f7898fc.png\";","import React from 'react';\nimport {Menu, Image} from 'semantic-ui-react';\nimport uhLogo from './images/uh-logo.png';\n\ntype NavBarProps =  {\n  title?: string\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst NavBar: React.FunctionComponent<NavBarProps> = ({ title = 'UH Dept Dashboard' }) => {\n  const menuStyle = {marginBottom: '20px'};\n  return (\n    <Menu style={menuStyle} attached=\"top\" borderless>\n      <Menu.Item>\n        <Image size='mini' src={uhLogo}/>\n      </Menu.Item>\n      <Menu.Item>\n        <span className='uh-green' style={{fontWeight: 800, fontSize: '24px'}}>{title}</span>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport {LineChart, Line, BarChart, Bar, PieChart, Pie, XAxis, Dot, DotProps} from 'recharts';\nimport {theme} from '../../Theme';\n\ninterface SparkProps {\n  data: { value: number, label?: string, year?: number }[]\n}\n\nfunction customDot(dotProps: JSX.IntrinsicAttributes & JSX.IntrinsicClassAttributes<Dot> & Readonly<DotProps> & Readonly<{ children?: React.ReactNode; }>) {\n  // @ts-ignore\n  if (dotProps.payload.year && dotProps.payload.year === 2019) {\n    // @ts-ignore\n    dotProps.stroke = 'red';\n    // @ts-ignore\n    dotProps.fill = 'red';\n  }\n  return <Dot {...dotProps}/>\n}\n\nconst LineSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <LineChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Line isAnimationActive={false} type='monotone' dataKey='value' stroke={theme.color.green} strokeWidth={2} dot={customDot} />\n    </LineChart>\n  )\n}\n\nconst BarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n    </BarChart>\n  )\n}\n\nconst LabeledBarSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <BarChart width={theme.chartWidth} height={theme.chartHeight} data={data}>\n      <Bar dataKey='value' fill={theme.color.green}  />\n      <XAxis dataKey='label'/>\n    </BarChart>\n  )\n}\n\nconst PieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/2} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n    </PieChart>\n  )\n}\n\nconst DemographicPieSpark: React.FunctionComponent<SparkProps> = ({ data }) => {\n  const data1 = data.slice(0,2);\n  const data2 = data.slice(2, data.length);\n  return (\n    <PieChart width={theme.chartWidth} height={theme.chartHeight} >\n      <Pie data={data1} dataKey='value' label={(entry) => entry.label} fill={theme.color.green} isAnimationActive={false} cx={theme.chartWidth/4} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} />\n      <Pie data={data2} dataKey='value' fill={theme.color.green} isAnimationActive={false} cx={(theme.chartWidth * 4)/5} cy={theme.chartHeight/2} outerRadius={theme.chartHeight/4} label={(entry) => entry.label}/>\n    </PieChart>\n  )\n}\n\nexport type { SparkProps };\nexport { LineSpark, BarSpark, PieSpark, DemographicPieSpark, LabeledBarSpark };\n","/**\n * The units associated with a Measure.\n */\nenum UnitType {\n  Dollars = '$',\n  Percent = '%',\n  Number = 'Number'\n}\n\n/**\n * All of the possible Measures.\n */\nenum MeasureType {\n  SSH= 'SSH',\n  FACULTYFTE = 'FACULTYFTE',\n  EXTRAMURALFUNDING = 'EXTRAMURALFUNDING',\n  RETENTION = 'RETENTION',\n  PUBLICATIONS = 'PUBLICATIONS',\n  GRADUATESTUDENTSUPPORTFTE = 'GRADUATESTUDENTSUPPORTFTE',\n  GRADUATES = 'GRADUATES',\n  TIMETODEGREE = 'TIMETODEGREE',\n  ADMISSIONS = 'ADMISSIONS',\n  COURSEEVALUATIONRESPONSE = 'COURSEEVALUATIONRESPONSE',\n  COURSEEVALUATIONRESPONSE2 = 'COURSEEVALUATIONRESPONSE2',\n  EXITSURVEYRESPONSE = 'EXITSURVEYRESPONSE',\n  STAKEHOLDERSURVEYRESPONSE = 'STAKEHOLDERSURVEYRESPONSE',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADRESEARCHEXPERIENCE = 'UNDERGRADRESEARCHEXPERIENCE'\n}\n\n/**\n * All of the possible Breakdowns.\n */\nenum BreakdownType {\n  BYFACULTY = 'BYFACULTY',\n  DEMOGRAPHIC = 'DEMOGRAPHIC',\n  INTERNSHIP = 'INTERNSHIP',\n  UNDERGRADUATERESEARCHEXPERIENCE  = 'UNDERGRADUATERESEARCHEXPERIENCE',\n  PUBLICATIONTIER = 'PUBLICATIONTIER',\n  TIMETODEGREE = 'TIMETODEGREE',\n  DEGREEPROGRAM = 'DEGREEPROGRAM',\n  NUMBERSEMESTERS = 'NUMBERSEMESTERS',\n  ADMISSIONS = 'ADMISSIONS',\n  COURSEEVALUATION = 'COURSEEVALUATION',\n  EXITSURVEY = 'EXITSURVEY',\n  STAKEHOLDERSURVEY = 'STAKEHOLDERSURVEY'\n}\n\n/**\n * A single, primitive measurement. All Measures and Breakdowns are ultimately one or more Measurements.\n * Example: { value: 4 }\n */\ninterface Measurement {\n  value: number,\n  label?: string,\n  year?: number\n}\n\n/**\n * All Measures compute a single Measurement per year. The \"trend\" is the past 5 years of the Measure.\n * Example: { 2015: {value: 2}, 2016: {value: 3}, 2017: {value: 4}, 2018: {value: 5}, 2019: {value: 1}}\n */\ntype MeasureTrend = {\n  [key in string]? : Measurement\n}\n\n/**\n * Breakdowns also have a \"trend\", but a breakdown consists of a set of Measurements. Label is typically required, or\n * the order of occurrence in the array is significant.\n * Example: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}\n */\ntype BreakdownTrend = {\n  [key in string]? : Measurement[]\n}\n\n/**\n * Provides the description of a Breakdown, plus the data associated with it.\n * Example: { description: 'Diversity', trend: { 2015: [{value: 33, label: 'Male'}, {value: 70, label: 'Female'}], ...}}\n */\ninterface BreakdownInfo {\n  description: string,\n  trend: BreakdownTrend\n}\n\n/**\n * Provides all Breakdowns associated with a given Measure.\n * Example: { BYFACULTY: { description: 'By faculty', trend: ...}, DIVERSITY: { description: ...}, ...}\n */\ntype Breakdowns = {\n  [breakdownType in BreakdownType]?: BreakdownInfo\n}\n\n/**\n * The global data structure containing all Measures and Breakdowns.\n *  db = {\n *    SSH: {\n *      unitType: 'Number',\n *      description: 'Measures the amount of instruction.'\n *      trend: { 2015: {value: 23}, 2016: {value: 24}, 2017: {value: 25}, 2018: {value: 26}, 2019: {value: 27}},\n *      breakdowns: {\n *        BYFACULTY: { description: 'Measures the number of faculty available for teaching, research and service.',\n *                     trend: { 2015: [{value: 2}, {value: 3}, {value: 4}, {value: 6}], 2016: [{value: 45} ... ] } }\n *      }\n *    }\n *  }*\n */\ntype DashboardDB = {\n  [measureType in MeasureType]?: {\n    unitType: UnitType,\n    description: string,\n    trend: MeasureTrend,\n    breakdowns: Breakdowns\n  }\n}\n\nexport type { MeasureTrend, Measurement, DashboardDB, Breakdowns, BreakdownTrend } ;\nexport { UnitType, MeasureType, BreakdownType };\n\n\n","import React from 'react';\nimport {Card, Statistic, Grid, Icon} from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport {ChartType, Units} from '../../Theme';\nimport {LineSpark, BarSpark, DemographicPieSpark, LabeledBarSpark, PieSpark} from '../../components/spark/SparkCharts';\n\ninterface SparkDataSet {\n  chartType: ChartType,\n  chartTitle: string,\n  chartData: { value: number }[]\n}\n\n\ninterface AYMeasureCardProps {\n  name: string,\n  description: string,\n  year: number,\n  value: number,\n  priorDelta?: number,\n  nextDelta?: number,\n  sparks: Array<SparkDataSet>,\n  unit?: Units\n}\n\nconst formatNumber = (num: number) => {\n  // Numbers less than 1,000 are just what they are.\n  if (num < 1000) {\n    return `${num}`;\n  }\n  // Numbers between 1,000 and 1,000,000 are formatted with 3 digit precision and a 'K'.\n  if (num < 1000000) {\n    return `${(num / 1000).toPrecision(3)}K`;\n  }\n  // Numbers more than 1M are formatted with an M.\n  return `${(num / 1000000).toPrecision(3)}M`;\n}\n\nconst AYMeasureCard: React.FunctionComponent<AYMeasureCardProps> = ({name, description, year, value, priorDelta, nextDelta, unit, sparks}) => {\n  let formattedValue = formatNumber(value);\n  if (unit)\n    if (unit === Units.Percent) {\n      formattedValue = `${formattedValue}%`;\n    } else if (unit === Units.Dollars) {\n      formattedValue = `$${formattedValue}`;\n    }\n  const formattedPriorDelta = (priorDelta && priorDelta < 0) ? `${priorDelta}` : `+${priorDelta}`;\n  const formattedNextDelta = (nextDelta && nextDelta < 0) ? `${nextDelta}` : `+${nextDelta}`;\n\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Grid>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"right\"\n                       style={{paddingLeft: '0px', paddingRight: '35px'}}>\n            {(year > 2015) ? (<div><Icon name=\"arrow left\"/> {formattedPriorDelta}% {year - 1} </div>) : ''}\n          </Grid.Column>\n          <Grid.Column style={{paddingLeft: 0, paddingRight: 0}} width={8}>\n            <div className=\"measureHeader\" style={{textAlign: 'center'}}>\n              <Statistic>\n                <Statistic.Label>{name}</Statistic.Label>\n                <Statistic.Value>{formattedValue}</Statistic.Value>\n              </Statistic>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\"\n                       style={{paddingLeft: '35px', paddingRight: '0px'}}>\n            {(year < 2019) ? (<div> {formattedNextDelta}% <Icon name=\"arrow right\"/> {year + 1} </div>) : ''}\n          </Grid.Column>\n        </Grid>\n        <Card.Description style={{paddingTop: '10px'}}>{description}</Card.Description>\n        { sparks ? sparks.map((data, index) => <div key={index} style={{paddingTop: '10px'}}>\n          <Card.Description textAlign='center'>{data.chartTitle}</Card.Description>\n          { (data.chartType === ChartType.LineSpark) ? <LineSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.BarSpark) ? <BarSpark data={data.chartData} /> : ''}\n          { (data.chartType === ChartType.PieSpark) ? <div style={{paddingTop: '10px'}}><PieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.DemographicPieSpark) ? <div style={{paddingTop: '10px'}}><DemographicPieSpark data={data.chartData} /></div> : ''}\n          { (data.chartType === ChartType.LabeledBarSpark) ? <div style={{paddingTop: '10px'}}><LabeledBarSpark data={data.chartData} /></div> : ''}\n        </div>) : ''}\n      </Card.Content>\n\n    </Card>\n  )\n}\n\nexport type { SparkDataSet, AYMeasureCardProps };\nexport default AYMeasureCard;\n","import {ChartType, Units} from \"../Theme\";\nimport {AYMeasureCardProps} from \"../pages/landing/AYMeasureCard\";\nimport {\n  Breakdowns,\n  DashboardDB,\n  Measurement,\n  MeasureTrend,\n  MeasureType,\n  UnitType,\n  BreakdownType,\n  BreakdownTrend\n} from \"../DataTypes\";\n\nconst endYear = 2019;\nconst startYear = endYear - 4;\nconst yearList = ['2015', '2016', '2017', '2018', '2019'];\n\nfunction makeDashboardDB(): DashboardDB {\n  const dashboardDB: DashboardDB = {};\n  dashboardDB[MeasureType.SSH] = {\n    unitType: UnitType.Number,\n    description: 'Measures the amount of instruction.',\n    trend: makeMeasurementTrend(1000, 1500),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.FACULTYFTE] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of faculty available for teaching, research and service.',\n    trend: makeMeasurementTrend(15, 20),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.EXTRAMURALFUNDING] = {\n    unitType: UnitType.Dollars,\n    description: 'Measures the dollar amount of funding brought in by faculty to this academic unit (or the University as a whole) for this AY',\n    trend: makeMeasurementTrend(2000000, 3000000),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.RETENTION] = {\n    unitType: UnitType.Percent,\n    description: 'Measures the percentage of students entering the academic program who receive a degree in it.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.PUBLICATIONS] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of published scholarly works.',\n    trend: makeMeasurementTrend(20, 30),\n    breakdowns: makeByPublicationQualityBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATESTUDENTSUPPORTFTE] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of graduate students receiving support in the form of tuition waivers and a monthly stipend.',\n    trend: makeMeasurementTrend(100, 200, 10),\n    breakdowns: makeByFacultyBreakdowns()\n  }\n  dashboardDB[MeasureType.GRADUATES] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of students receiving a degree.',\n    trend: makeMeasurementTrend(100, 200),\n    breakdowns: makeByGenderEthnicityBreakdowns()\n  }\n  dashboardDB[MeasureType.TIMETODEGREE] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of semesters required by this year\\'s graduates to obtain their undergraduate degree.',\n    trend: makeMeasurementTrend(70, 100, 10),\n    breakdowns: makeByNumberSemesterBreakdowns()\n  }\n  dashboardDB[MeasureType.ADMISSIONS] = {\n    unitType: UnitType.Number,\n    description: 'Measures the number of students admitted.',\n    trend: makeMeasurementTrend(70, 100),\n    breakdowns: makeByDegreeProgramBreakdowns()\n  }\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE] = {\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"As a professional student, I found this course attractive and compatible with my work life.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  return dashboardDB;\n  dashboardDB[MeasureType.COURSEEVALUATIONRESPONSE2] = {\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"This course provided opportunities for me to improve my software development skills\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeCourseEvaluationResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.EXITSURVEYRESPONSE] = {\n    unitType: UnitType.Percent,\n    description: 'Measures responses to: \"If you could start your higher education experience over, would you still attend this program?',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeExitSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.STAKEHOLDERSURVEYRESPONSE] = {\n    unitType: UnitType.Number,\n    description: 'Measures responses to: \"I am satisfied with the quality of graduates from this program.\"',\n    trend: makeMeasurementTrend(30, 50, 10),\n    breakdowns: makeStakeholderSurveyResponseBreakdowns()\n  }\n  dashboardDB[MeasureType.INTERNSHIP] = {\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an internship program.',\n    trend: makeMeasurementTrend(30, 50),\n    breakdowns: makeInternshipBreakdowns()\n  }\n  dashboardDB[MeasureType.UNDERGRADRESEARCHEXPERIENCE] = {\n    unitType: UnitType.Percent,\n    description: 'Measures percentage of this year\\'s graduates who participated in an undergraduate research experience.',\n    trend: makeMeasurementTrend(40, 60),\n    breakdowns: makeUndergraduateResearchExperienceBreakdowns()\n  }\n  return dashboardDB;\n}\n\nfunction makeUndergraduateResearchExperienceBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeUndergraduateResearchExperienceMeasurements();\n  }\n  breakdowns[BreakdownType.UNDERGRADUATERESEARCHEXPERIENCE] = { description: 'By funding', trend: trend };\n  return breakdowns;\n}\n\nfunction makeInternshipBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeInternshipMeasurements();\n  }\n  breakdowns[BreakdownType.INTERNSHIP] = { description: 'By location', trend: trend };\n  return breakdowns;\n}\n\nfunction makeStakeholderSurveyResponseBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeStakeholderSurveyMeasurements();\n  }\n  breakdowns[BreakdownType.STAKEHOLDERSURVEY] = { description: 'By satisfaction', trend: trend };\n  return breakdowns;\n}\n\nfunction makeExitSurveyResponseBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeExitSurveyMeasurements();\n  }\n  breakdowns[BreakdownType.EXITSURVEY] = { description: 'By response', trend: trend };\n  return breakdowns;\n}\n\nfunction makeCourseEvaluationResponseBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeCourseEvaluationMeasurements();\n  }\n  breakdowns[BreakdownType.COURSEEVALUATION] = { description: 'By agreement', trend: trend };\n  return breakdowns;\n}\n\nfunction makeByPublicationQualityBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makePublicationQualityMeasurements();\n  }\n  breakdowns[BreakdownType.PUBLICATIONTIER] = { description: 'By publication quality', trend: trend };\n  return breakdowns;\n}\n\nfunction makeByDegreeProgramBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByDegreeProgramMeasurements();\n  }\n  breakdowns[BreakdownType.DEGREEPROGRAM] = { description: 'By degree program', trend: trend };\n  return breakdowns;\n}\n\nfunction makeByFacultyBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeSortedMeasurements(15, 10);\n  }\n  breakdowns[BreakdownType.BYFACULTY] = { description: 'By faculty', trend: trend };\n  return breakdowns;\n}\n\nfunction makeByGenderEthnicityBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeDemographicMeasurements();\n  }\n  breakdowns[BreakdownType.DEMOGRAPHIC] = { description: 'By gender, ethnicity', trend: trend };\n  return breakdowns;\n}\n\nfunction makeByNumberSemesterBreakdowns(): Breakdowns {\n  const breakdowns: Breakdowns = {};\n  const trend: BreakdownTrend = {};\n  for (const year of yearList) {\n    trend[year] = makeByNumberSemesterMeasurements();\n  }\n  breakdowns[BreakdownType.NUMBERSEMESTERS] = { description: 'By number of semesters', trend: trend };\n  return breakdowns;\n}\n\nfunction makeUndergraduateResearchExperienceMeasurements(): Measurement[] {\n  const data = [];\n  const urop = 50 + Math.floor(Math.random() * 20);\n  const faculty = Math.floor(Math.random() * 10);\n  const unfunded = 100 - urop - faculty;\n  data.push({value: urop, label: 'UROP'});\n  data.push({value: faculty, label: 'Faculty'});\n  data.push({value: unfunded, label: 'Unfunded'});\n  return data;\n}\n\nfunction makeInternshipMeasurements(): Measurement[] {\n  const data = [];\n  const hawaii = 50 + Math.floor(Math.random() * 20);\n  const mainland = Math.floor(Math.random() * 10);\n  const other = 100 - hawaii - mainland;\n  data.push({value: hawaii, label: 'Hawaii'});\n  data.push({value: mainland, label: 'Mainland'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makeExitSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'UH'});\n  data.push({value: Math.floor(Math.random() * 80), label: 'Another school'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'No school'});\n  return data;\n}\n\nfunction makeStakeholderSurveyMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Unsatisfied'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Satisfied'});\n  return data;\n}\n\nfunction makeCourseEvaluationMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Disagree'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Agree'});\n  return data;\n}\n\nfunction makeByDegreeProgramMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.A.'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'M.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Ph.D.'});\n  return data;\n}\n\nfunction makeByNumberSemesterMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: 2, label: '< 6'});\n  data.push({value: Math.floor(Math.random() * 10), label: '6-8'});\n  data.push({value: Math.floor(Math.random() * 10), label: '8-10'});\n  data.push({value: Math.floor(Math.random() * 10), label: '10-12'});\n  data.push({value: 2, label: '12+'});\n  return data;\n}\n\nfunction makeDemographicMeasurements(): Measurement[] {\n  const women = Math.floor(Math.random() * 20) + 3;\n  const men = 100 - women;\n  const data = [];\n  data.push({value: women, label: 'Women'});\n  data.push({value: men, label: 'Men'});\n  const caucasian = 50 + Math.floor(Math.random() * 20);\n  const nativeHawaiian = Math.floor(Math.random() * 10);\n  const other = 100 - caucasian - nativeHawaiian;\n  data.push({value: caucasian, label: 'Caucasian'});\n  data.push({value: nativeHawaiian, label: 'Native Hawaiian'});\n  data.push({value: other, label: 'Other'});\n  return data;\n}\n\nfunction makePublicationQualityMeasurements(): Measurement[] {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 1'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 2'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Other'});\n  return data;\n}\n\n\nfunction makeMeasurementTrend(lower: number, upper: number, divisor = 1): MeasureTrend {\n const trend: MeasureTrend = {};\n for (const year of yearList) {\n   let value = Math.floor(Math.random() * (upper - lower) + lower);\n   value = value / divisor;\n   trend[year] = { value };\n }\n return trend;\n}\n\n\nfunction makeRandomMeasurements(num: number, range = 101): Measurement[] {\n  const data = [];\n  for (let i = 0; i < num; i++) {\n    data.push({value: Math.floor(Math.random() * range), year: startYear + i});\n  }\n  return data;\n}\n\nfunction makeSortedMeasurements(num: number, range = 101): Measurement[] {\n  let data = [];\n  for (let i = 0; i < num; i++) {\n    data.push({value: Math.floor(Math.random() * range), year: 0});\n  }\n  data = data.sort(function (a, b) {\n    return a.value - b.value\n  });\n  for (let i = 0; i < num; i++) {\n    data[i].year = startYear + i;\n  }\n  return data;\n}\n\nconst makeDemographicPieBreakdown = () => {\n  const women = Math.floor(Math.random() * 20) + 3;\n  const men = 100 - women;\n  const data = [];\n  data.push({value: women, label: 'Women'});\n  data.push({value: men, label: 'Men'});\n  const caucasian = 50 + Math.floor(Math.random() * 20);\n  const nativeHawaiian = Math.floor(Math.random() * 10);\n  const other = 100 - caucasian - nativeHawaiian;\n  data.push({value: caucasian, label: 'Caucasian'});\n  data.push({value: nativeHawaiian, label: 'Native Hawaiian'});\n  data.push({value: other, label: 'Other'});\n  return {chartType: ChartType.DemographicPieSpark, chartTitle: 'Breakdown by gender, ethnicity', chartData: data}\n}\n\nconst makeInternshipBreakdown = () => {\n  const data = [];\n  const hawaii = 50 + Math.floor(Math.random() * 20);\n  const mainland = Math.floor(Math.random() * 10);\n  const other = 100 - hawaii - mainland;\n  data.push({value: hawaii, label: 'Hawaii'});\n  data.push({value: mainland, label: 'Mainland'});\n  data.push({value: other, label: 'Other'});\n  return {chartType: ChartType.PieSpark, chartTitle: 'Breakdown by location', chartData: data}\n}\n\nconst makeUndergraduateResearchExperienceBreakdown = () => {\n  const data = [];\n  const urop = 50 + Math.floor(Math.random() * 20);\n  const faculty = Math.floor(Math.random() * 10);\n  const unfunded = 100 - urop - faculty;\n  data.push({value: urop, label: 'UROP'});\n  data.push({value: faculty, label: 'Faculty'});\n  data.push({value: unfunded, label: 'Unfunded'});\n  return {chartType: ChartType.PieSpark, chartTitle: 'Breakdown by funding', chartData: data}\n}\n\nconst makePublicationTierBreakdown = () => {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 1'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Tier 2'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'Other'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by publication quality', chartData: data}\n}\n\nconst makeTimeToDegreeBreakdown = () => {\n  const data = [];\n  data.push({value: 2, label: '< 6'});\n  data.push({value: Math.floor(Math.random() * 10), label: '6-8'});\n  data.push({value: Math.floor(Math.random() * 10), label: '8-10'});\n  data.push({value: Math.floor(Math.random() * 10), label: '10-12'});\n  data.push({value: 2, label: '12+'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by number of semesters', chartData: data}\n}\n\nconst makeAdmissionsBreakdown = () => {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.A.'});\n  data.push({value: Math.floor(Math.random() * 100), label: 'B.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'M.S.'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Ph.D.'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by degree program', chartData: data}\n}\n\nconst makeCourseEvaluationBreakdown = () => {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'Disagree'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Agree'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by agreement', chartData: data}\n}\n\nconst makeExitSurveyBreakdown = () => {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 100), label: 'UH'});\n  data.push({value: Math.floor(Math.random() * 80), label: 'Another school'});\n  data.push({value: Math.floor(Math.random() * 50), label: 'No school'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by response', chartData: data}\n}\n\nconst makeStakeholderSurveyBreakdown = () => {\n  const data = [];\n  data.push({value: Math.floor(Math.random() * 50), label: 'Unsatisfied'});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 100), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: ''});\n  data.push({value: Math.floor(Math.random() * 50), label: 'Satisfied'});\n  return {chartType: ChartType.LabeledBarSpark, chartTitle: 'Breakdown by satisfaction', chartData: data}\n}\n\nconst makeFiveYearTrendBreakdown = () => {\n  return {\n    chartType: ChartType.LineSpark,\n    chartTitle: 'Five year trend',\n    chartData: makeRandomMeasurements(5)\n  }\n}\n\nconst makeByFacultyBreakdown = () => {\n  return {chartType: ChartType.BarSpark, chartTitle: 'By faculty', chartData: makeSortedMeasurements(15, 10)}\n}\n\nconst makeDelta = () => Math.floor(Math.random() * (30 - 20)) + 20;\nconst makeAYValue = (lower: number, upper: number) => Math.floor(Math.random() * (upper - lower) + lower);\n\nfunction makeAYMeasureCardProps(name: string, year: number, description: string, lower: number, upper: number): AYMeasureCardProps {\n  return {\n    name,\n    value: makeAYValue(lower, upper),\n    description,\n    year,\n    priorDelta: makeDelta(),\n    nextDelta: makeDelta(),\n    sparks: [makeFiveYearTrendBreakdown()]\n  }\n}\n\nfunction makeSSHCardProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('SSH', year, 'Measures the amount of instruction.', 1500, 2000);\n  props.sparks.push(makeByFacultyBreakdown());\n  return props;\n}\n\nfunction makeFacultyFTEProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Faculty FTE', year, 'Measures the number of faculty available for teaching, research and service.', 15, 20);\n  props.sparks.push(makeDemographicPieBreakdown());\n  return props;\n}\n\nfunction makeExtramuralFundingProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Extramural Funding', year, 'Measures the dollar amount of funding brought in by faculty to this academic unit (or the University as a whole) for this AY.', 2000000, 3000000);\n  props.unit = Units.Dollars;\n  props.sparks.push(makeByFacultyBreakdown());\n  return props;\n}\n\nfunction makeRetentionProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Retention', year, 'Measures the percentage of students entering the academic program who receive a degree in it.', 20, 40);\n  props.unit = Units.Percent;\n  props.sparks.push(makeDemographicPieBreakdown());\n  return props;\n}\n\nfunction makePublicationsProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Publications', year, 'Measures the number of published scholarly works.', 20, 40);\n  props.sparks.push(makePublicationTierBreakdown());\n  return props;\n}\n\nfunction makeGraduateStudentSupportFTEProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Graduate Student Support FTE', year, 'Measures the number of graduate students receiving support in the form of tuition waivers and a monthly stipend.', 120, 140);\n  props.value = props.value / 10;\n  props.sparks.push(makeByFacultyBreakdown());\n  return props;\n}\n\nfunction makeGraduatesProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Graduates', year, 'Measures the number of students receiving a degree.', 120, 150);\n  props.sparks.push(makeDemographicPieBreakdown());\n  return props;\n}\n\nfunction makeTDDProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Time To Degree', year, 'Measures the number of semesters required by this year\\'s graduates to obtain their undergraduate degree.', 80, 100);\n  props.value = props.value / 10;\n  props.sparks.push(makeTimeToDegreeBreakdown());\n  return props;\n}\n\nfunction makeAdmissionsProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Admissions', year, 'Measures the number of students admitted this AY.', 80, 100);\n  props.sparks.push(makeAdmissionsBreakdown());\n  return props;\n}\n\nfunction makeCourseEvaluationOneProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Course Evaluation Response', year, 'Measures responses to: \"As a professional student, I found this course attractive and compatible with my work life.\"', 30, 50);\n  props.value = props.value / 10;\n  props.sparks.push(makeCourseEvaluationBreakdown());\n  return props;\n}\n\nfunction makeCourseEvaluationTwoProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Course Evaluation Response', year, 'Measures responses to: \"This course provided opportunities for me to improve my software development skills\"', 30, 50);\n  props.value = props.value / 10;\n  props.sparks.push(makeCourseEvaluationBreakdown());\n  return props;\n}\n\nfunction makeExitSurveyProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Exit Survey Response', year, 'Measures responses to: \"If you could start your higher education experience over, would you still attend this program?\"', 50, 80);\n  props.unit = Units.Percent;\n  props.sparks.push(makeExitSurveyBreakdown());\n  return props;\n}\n\nfunction makeStakeholderSurveyProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Stakeholder Survey Response', year, 'Measures responses to: \"I am satisfied with the quality of graduates from this program.\"', 10, 50);\n  props.value = props.value / 10;\n  props.sparks.push(makeStakeholderSurveyBreakdown());\n  return props;\n}\n\nfunction makeInternshipProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Internship', year, 'Measures percentage of this year\\'s graduates who participated in an internship program.', 50, 90);\n  props.unit = Units.Percent;\n  props.sparks.push(makeInternshipBreakdown());\n  return props;\n}\n\nfunction makeUndergraduateResearchExperienceProps(year: number): AYMeasureCardProps {\n  const props = makeAYMeasureCardProps('Undergrad Research Experience', year, 'Measures percentage of this year\\'s graduates who participated in an undergraduate research experience.', 50, 90);\n  props.unit = Units.Percent;\n  props.sparks.push(makeUndergraduateResearchExperienceBreakdown());\n  return props;\n}\n\nconst dashboardDB = makeDashboardDB();\n\nexport {\n  makeSSHCardProps,\n  makeFacultyFTEProps,\n  makeExtramuralFundingProps,\n  makeRetentionProps,\n  makePublicationsProps,\n  makeGraduateStudentSupportFTEProps,\n  makeGraduatesProps,\n  makeTDDProps,\n  makeAdmissionsProps,\n  makeCourseEvaluationOneProps,\n  makeCourseEvaluationTwoProps,\n  makeExitSurveyProps,\n  makeStakeholderSurveyProps,\n  makeInternshipProps,\n  makeUndergraduateResearchExperienceProps,\n  dashboardDB\n};\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport AYMeasureCard, {AYMeasureCardProps} from \"./AYMeasureCard\";\nimport {\n  makeAdmissionsProps,\n  makeCourseEvaluationOneProps,\n  makeCourseEvaluationTwoProps, makeExitSurveyProps,\n  makeExtramuralFundingProps,\n  makeFacultyFTEProps,\n  makeGraduatesProps,\n  makeGraduateStudentSupportFTEProps, makeInternshipProps,\n  makePublicationsProps,\n  makeRetentionProps,\n  makeSSHCardProps, makeStakeholderSurveyProps,\n  makeTDDProps, makeUndergraduateResearchExperienceProps\n} from \"../../data/SampleData\";\n\ninterface AYMeasureCardsProps {\n  year: number\n}\n\nfunction makeCardInfo(year: number) : AYMeasureCardProps[] {\n  return [\n    makeSSHCardProps(year),\n    makeFacultyFTEProps(year),\n    makeExtramuralFundingProps(year),\n    makeRetentionProps(year),\n    makePublicationsProps(year),\n    makeGraduateStudentSupportFTEProps(year),\n    makeGraduatesProps(year),\n    makeTDDProps(year),\n    makeAdmissionsProps(year),\n    makeCourseEvaluationOneProps(year),\n    makeCourseEvaluationTwoProps(year),\n    makeExitSurveyProps(year),\n    makeStakeholderSurveyProps(year),\n    makeInternshipProps(year),\n    makeUndergraduateResearchExperienceProps(year)\n  ]\n}\n\n/** Displays a set of Cards, each containing an AcademicYearMeasure. */\nconst AYMeasureCards: React.FunctionComponent<AYMeasureCardsProps> = ({ year }) => {\n  const cardInfo = makeCardInfo(year);\n  return (\n    <Card.Group centered>\n      {cardInfo.map((info, index) => <AYMeasureCard key={index} {...info}/>)}\n    </Card.Group>\n  );\n}\n\nexport default AYMeasureCards;\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport AYMeasureCards from \"./AYMeasureCards\";\nimport './AYTabbedContainer.css';\nimport {DashboardDB} from \"../../DataTypes\";\n\ninterface AYTabbedContainerProps  {\n  years: number[],\n  dashboardDB: DashboardDB\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst AYTabbedContainer: React.FunctionComponent<AYTabbedContainerProps> = ({ years, dashboardDB }) => {\n  const panes = years.map(year => { return { menuItem: `${year}`, render: () => <Tab.Pane><AYMeasureCards year={year}/></Tab.Pane>} })\n\n  console.log(dashboardDB); //intimacyu\n\n  return (\n    <Tab panes={panes} defaultActiveIndex={4}/>\n  );\n}\n\nexport default AYTabbedContainer;\n","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport AYTabbedContainer from \"./AYTabbedContainer\";\nimport {DashboardDB} from \"../../DataTypes\";\n\ntype LandingPageProps = {\n  latestAcademicYear: number\n  dashboardDB: DashboardDB\n}\n\nconst LandingPage: React.FunctionComponent<LandingPageProps> = ({latestAcademicYear, dashboardDB}) => {\n  const years = [latestAcademicYear - 4, latestAcademicYear - 3, latestAcademicYear - 2, latestAcademicYear - 1, latestAcademicYear ];\n\n  return (\n    <Container fluid style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <AYTabbedContainer years={years} dashboardDB={dashboardDB}/>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport LandingPage from './pages/landing/LandingPage';\nimport { DashboardDB } from \"./DataTypes\";\n\ntype AppProps = {\n  latestAcademicYear: number,\n  title: string\n  dashboardDB: DashboardDB\n}\n\nconst App: React.FunctionComponent<AppProps> = ({title, latestAcademicYear, dashboardDB}) => {\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <NavBar title={title}/>\n      <LandingPage latestAcademicYear={latestAcademicYear} dashboardDB={dashboardDB}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport { dashboardDB } from \"./data/SampleData\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title='UH Department Dashboard Template' latestAcademicYear={2019} dashboardDB = {dashboardDB} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}