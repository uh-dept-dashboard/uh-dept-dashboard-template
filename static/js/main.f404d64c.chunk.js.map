{"version":3,"sources":["Theme.tsx","images/uh-logo.png","NavBar.tsx","pages/landing/AYMeasureCard.tsx","pages/landing/AYMeasureCards.tsx","pages/landing/AYTabbedContainer.tsx","pages/landing/LandingPage.tsx","App.tsx","index.tsx"],"names":["Units","NavBar","title","Menu","style","marginBottom","attached","borderless","Item","Image","size","src","uhLogo","className","fontWeight","fontSize","color","this","green","purple","lightGreen","red","yellow","AYMeasureCard","num","name","description","year","value","priorDelta","nextDelta","unit","formattedValue","toPrecision","Percent","Dollars","formattedPriorDelta","formattedNextDelta","Card","raised","Content","Grid","Column","width","verticalAlign","textAlign","paddingLeft","paddingRight","Icon","Statistic","Label","Value","Description","Meta","AYMeasureCards","makeDelta","Math","floor","random","cardInfo","Group","centered","map","info","index","key","AYTabbedContainer","panes","years","menuItem","render","Tab","Pane","defaultActiveIndex","LandingPage","latestAcademicYear","Container","fluid","App","Helmet","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f404d64c.chunk.js","sourcesContent":["/* Provide access to various thematic elements. */\n\nclass Theme {\n  color: Record<string, string>;\n  constructor() {\n    this.color = {};\n    this.color.green = '#376551';\n    this.color.purple = '#7C64E8';\n    this.color.lightGreen = '#4DE8A5';\n    this.color.red = '#E84F35';\n    this.color.yellow = '#E8D541';\n  }\n}\n\nconst theme = new Theme();\n\nenum Units {\n  Dollars = '$',\n  Percent = '%'\n}\n\nexport { theme, Units };\n","export default __webpack_public_path__ + \"static/media/uh-logo.1f7898fc.png\";","import React from 'react';\nimport {Menu, Image} from 'semantic-ui-react';\nimport uhLogo from './images/uh-logo.png';\n\ntype NavBarProps =  {\n  title?: string\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst NavBar: React.FunctionComponent<NavBarProps> = ({ title = 'UH Dept Dashboard' }) => {\n  const menuStyle = {marginBottom: '20px'};\n  return (\n    <Menu style={menuStyle} attached=\"top\" borderless>\n      <Menu.Item>\n        <Image size='mini' src={uhLogo}/>\n      </Menu.Item>\n      <Menu.Item>\n        <span className='uh-green' style={{fontWeight: 800, fontSize: '24px'}}>{title}</span>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport {Card, Statistic, Grid, Icon} from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport { Units } from '../../Theme';\n\ninterface AYMeasureCardProps {\n  name: string,\n  description: string,\n  year: number,\n  value: number,\n  priorDelta?: number,\n  nextDelta?: number,\n  sparks?: Array<Record<string, unknown>>,\n  unit?: Units\n}\n\nconst formatNumber = (num: number) => {\n  // Numbers less than 1,000 are just what they are.\n  if (num < 1000) {\n    return `${num}`;\n  }\n  // Numbers between 1,000 and 1,000,000 are formatted with 3 digit precision and a 'K'.\n  if (num < 1000000) {\n    return `${(num / 1000).toPrecision(3)}K`;\n  }\n  // Numbers more than 1M are formatted with an M.\n  return `${(num / 1000000).toPrecision(3)}M`;\n}\n\nconst AYMeasureCard: React.FunctionComponent<AYMeasureCardProps> = ({name, description, year, value, priorDelta, nextDelta, unit}) => {\n  let formattedValue = formatNumber(value);\n  if (unit)\n    if (unit === Units.Percent) {\n      formattedValue = `${formattedValue}%`;\n    } else if (unit === Units.Dollars) {\n      formattedValue = `$${formattedValue}`;\n    }\n  const formattedPriorDelta = (priorDelta && priorDelta < 0) ? `${priorDelta}` : `+${priorDelta}`;\n  const formattedNextDelta = (nextDelta && nextDelta < 0) ? `${nextDelta}` : `+${nextDelta}`;\n\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Grid>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"right\"\n                       style={{paddingLeft: '0px', paddingRight: '35px'}}>\n            {(year > 2015) ? (<div><Icon name=\"arrow left\"/> {formattedPriorDelta}% {year - 1} </div>) : ''}\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <div className=\"measureHeader\" style={{textAlign: 'center'}}>\n              <Statistic>\n                <Statistic.Label>{name}</Statistic.Label>\n                <Statistic.Value>{formattedValue}</Statistic.Value>\n              </Statistic>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\"\n                       style={{paddingLeft: '35px', paddingRight: '0px'}}>\n            {(year < 2019) ? (<div> {formattedNextDelta}% <Icon name=\"arrow right\"/> {year + 1} </div>) : ''}\n          </Grid.Column>\n        </Grid>\n        <Card.Description>{description}</Card.Description>\n        <Card.Meta>{`${year}`}</Card.Meta>\n      </Card.Content>\n    </Card>\n  )\n}\n\n\nexport default AYMeasureCard;\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport './AYMeasureCards.css';\nimport AYMeasureCard from \"./AYMeasureCard\";\nimport { Units } from '../../Theme';\n\ninterface AYMeasureCardsProps {\n  year: number\n}\n\n/** Displays a set of Cards, each containing an AcademicYearMeasure. */\nconst AYMeasureCards: React.FunctionComponent<AYMeasureCardsProps> = ({ year }) => {\n  const makeDelta = () => Math.floor(Math.random() * 101) - 50;\n  const cardInfo = [\n    {\n      name: 'SSH',\n      value: 20123,\n      description: 'Student Semester Hours is a measure of the study body provided instruction',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta()\n    },\n    {\n      name: 'Faculty FTE',\n      value: 18,\n      description: 'Faculty FTE measures the number of faculty available for teaching, research and service',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta()\n    },\n    {\n      name: 'Extramural Funding',\n      value: 2450346,\n      description: 'Extramural funding measures the dollar amount of funding brought in by faculty to this academic unit (or the University as a whole)',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta(),\n      unit: Units.Dollars\n    },\n    {\n      name: 'Retention',\n      value: 34,\n      description: 'Retention measures the percentage of students entering the academic program who receive a degree in it.',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta(),\n      unit: Units.Percent\n    },\n    {\n      name: 'Publications',\n      value: 67,\n      description: 'Publications measures the number of published scholarly works.',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta()\n    },\n    {\n      name: 'Graduate Student Support FTE',\n      value: 47.5,\n      description: 'Graduate Student Support FTE measures the number of graduate students receiving support in the form of tuition waivers and a monthly stipend.',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta()\n    },\n    {\n      name: 'Graduates',\n      value: 168,\n      description: 'Graduates measures the number of students receiving a degree.',\n      priorDelta: makeDelta(),\n      nextDelta: makeDelta()\n    },\n  ]\n\n  return (\n    <Card.Group centered>\n      {cardInfo.map((info, index) => <AYMeasureCard year={year} key={index} {...info}/>)}\n    </Card.Group>\n  );\n}\n\nexport default AYMeasureCards;\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport AYMeasureCards from \"./AYMeasureCards\";\nimport './AYTabbedContainer.css';\n\ninterface AYTabbedContainerProps  {\n  years: number[]\n}\n\n/** The NavBar appears at the top of every page. Rendered by the App Layout component. */\nconst AYTabbedContainer: React.FunctionComponent<AYTabbedContainerProps> = ({ years }) => {\n  const panes = years.map(year => { return { menuItem: `${year}`, render: () => <Tab.Pane><AYMeasureCards year={year}/></Tab.Pane>} })\n\n  return (\n    <Tab panes={panes} defaultActiveIndex={4}/>\n  );\n}\n\nexport default AYTabbedContainer;\n","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport AYTabbedContainer from \"./AYTabbedContainer\";\n\ntype LandingPageProps = {\n  latestAcademicYear: number\n}\n\nconst LandingPage: React.FunctionComponent<LandingPageProps> = ({latestAcademicYear}) => {\n  const years = [latestAcademicYear - 4, latestAcademicYear - 3, latestAcademicYear - 2, latestAcademicYear - 1, latestAcademicYear ];\n\n  return (\n    <Container fluid style={{paddingLeft: '10px', paddingRight: '10px'}}>\n      <AYTabbedContainer years={years}/>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport LandingPage from './pages/landing/LandingPage';\n\ntype AppProps = {\n  latestAcademicYear: number\n}\n\nconst App: React.FunctionComponent<AppProps> = ({latestAcademicYear}) => {\n\n  return (\n    <div>\n      <Helmet>\n        <title>UH Dept Dashboard Template</title>\n      </Helmet>\n      <NavBar/>\n      <LandingPage latestAcademicYear={latestAcademicYear}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App latestAcademicYear={2019}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}